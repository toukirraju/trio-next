{"version":3,"file":"Dialog.js","sourceRoot":"","sources":["Dialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  useFloating,\r\n  useClick,\r\n  useDismiss,\r\n  useRole,\r\n  useInteractions,\r\n  useMergeRefs,\r\n  FloatingPortal,\r\n  FloatingFocusManager,\r\n  FloatingOverlay,\r\n  useId,\r\n} from \"@floating-ui/react\";\r\n\r\ninterface DialogOptions {\r\n  initialOpen?: boolean;\r\n  open?: boolean;\r\n  onOpenChange?: (open: boolean) => void;\r\n}\r\n\r\nexport function useDialog({\r\n  initialOpen = false,\r\n  open: controlledOpen,\r\n  onOpenChange: setControlledOpen,\r\n}: DialogOptions = {}) {\r\n  const [uncontrolledOpen, setUncontrolledOpen] = React.useState(initialOpen);\r\n  const [labelId, setLabelId] = React.useState<string | undefined>();\r\n  const [descriptionId, setDescriptionId] = React.useState<\r\n    string | undefined\r\n  >();\r\n\r\n  const open = controlledOpen ?? uncontrolledOpen;\r\n  const setOpen = setControlledOpen ?? setUncontrolledOpen;\r\n\r\n  const data = useFloating({\r\n    open,\r\n    onOpenChange: setOpen,\r\n  });\r\n\r\n  const context = data.context;\r\n\r\n  const click = useClick(context, {\r\n    enabled: controlledOpen == null,\r\n  });\r\n  const dismiss = useDismiss(context, { outsidePressEvent: \"mousedown\" });\r\n  const role = useRole(context);\r\n\r\n  const interactions = useInteractions([click, dismiss, role]);\r\n\r\n  return React.useMemo(\r\n    () => ({\r\n      open,\r\n      setOpen,\r\n      ...interactions,\r\n      ...data,\r\n      labelId,\r\n      descriptionId,\r\n      setLabelId,\r\n      setDescriptionId,\r\n    }),\r\n    [open, setOpen, interactions, data, labelId, descriptionId]\r\n  );\r\n}\r\n\r\ntype ContextType =\r\n  | (ReturnType<typeof useDialog> & {\r\n      setLabelId: React.Dispatch<React.SetStateAction<string | undefined>>;\r\n      setDescriptionId: React.Dispatch<\r\n        React.SetStateAction<string | undefined>\r\n      >;\r\n    })\r\n  | null;\r\n\r\nconst DialogContext = React.createContext<ContextType>(null);\r\n\r\nexport const useDialogContext = () => {\r\n  const context = React.useContext(DialogContext);\r\n\r\n  if (context == null) {\r\n    throw new Error(\"Dialog components must be wrapped in <Dialog />\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport function Dialog({\r\n  children,\r\n  ...options\r\n}: {\r\n  children: React.ReactNode;\r\n} & DialogOptions) {\r\n  const dialog = useDialog(options);\r\n  return (\r\n    <DialogContext.Provider value={dialog}>{children}</DialogContext.Provider>\r\n  );\r\n}\r\n\r\ninterface DialogTriggerProps {\r\n  children: React.ReactNode;\r\n  asChild?: boolean;\r\n}\r\n\r\nexport const DialogTrigger = React.forwardRef<\r\n  HTMLElement,\r\n  React.HTMLProps<HTMLElement> & DialogTriggerProps\r\n>(function DialogTrigger({ children, asChild = false, ...props }, propRef) {\r\n  const context = useDialogContext();\r\n  const childrenRef = (children as any).ref;\r\n  const ref = useMergeRefs([context.refs.setReference, propRef, childrenRef]);\r\n\r\n  // `asChild` allows the user to pass any element as the anchor\r\n  if (asChild && React.isValidElement(children)) {\r\n    return React.cloneElement(\r\n      children,\r\n      context.getReferenceProps({\r\n        ref,\r\n        ...props,\r\n        ...children.props,\r\n        \"data-state\": context.open ? \"open\" : \"closed\",\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      ref={ref}\r\n      // The user can style the trigger based on the state\r\n      data-state={context.open ? \"open\" : \"closed\"}\r\n      {...context.getReferenceProps(props)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport const DialogContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLProps<HTMLDivElement>\r\n>(function DialogContent(props, propRef) {\r\n  const { context: floatingContext, ...context } = useDialogContext();\r\n  const ref = useMergeRefs([context.refs.setFloating, propRef]);\r\n\r\n  if (!floatingContext.open) return null;\r\n\r\n  return (\r\n    <FloatingPortal>\r\n      <FloatingOverlay\r\n        className=\"grid place-items-center bg-black/50 z-50\"\r\n        lockScroll\r\n      >\r\n        <FloatingFocusManager context={floatingContext}>\r\n          <div\r\n            ref={ref}\r\n            aria-labelledby={context.labelId}\r\n            aria-describedby={context.descriptionId}\r\n            {...context.getFloatingProps(props)}\r\n          >\r\n            {props.children}\r\n          </div>\r\n        </FloatingFocusManager>\r\n      </FloatingOverlay>\r\n    </FloatingPortal>\r\n  );\r\n});\r\n\r\nexport const DialogHeading = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLProps<HTMLHeadingElement>\r\n>(function DialogHeading({ children, ...props }, ref) {\r\n  const { setLabelId } = useDialogContext();\r\n  const id = useId();\r\n\r\n  // Only sets `aria-labelledby` on the Dialog root element\r\n  // if this component is mounted inside it.\r\n  React.useLayoutEffect(() => {\r\n    setLabelId(id);\r\n    return () => setLabelId(undefined);\r\n  }, [id, setLabelId]);\r\n\r\n  return (\r\n    <h2 {...props} ref={ref} id={id}>\r\n      {children}\r\n    </h2>\r\n  );\r\n});\r\n\r\nexport const DialogDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLProps<HTMLParagraphElement>\r\n>(function DialogDescription({ children, ...props }, ref) {\r\n  const { setDescriptionId } = useDialogContext();\r\n  const id = useId();\r\n\r\n  // Only sets `aria-describedby` on the Dialog root element\r\n  // if this component is mounted inside it.\r\n  React.useLayoutEffect(() => {\r\n    setDescriptionId(id);\r\n    return () => setDescriptionId(undefined);\r\n  }, [id, setDescriptionId]);\r\n\r\n  return (\r\n    <p {...props} ref={ref} id={id}>\r\n      {children}\r\n    </p>\r\n  );\r\n});\r\n\r\nexport const DialogClose = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>\r\n>(function DialogClose(props, ref) {\r\n  const { setOpen } = useDialogContext();\r\n  return (\r\n    <button type=\"button\" {...props} ref={ref} onClick={() => setOpen(false)} />\r\n  );\r\n});\r\n"]}