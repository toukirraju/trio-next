{"version":3,"file":"AvatarStory.jsx","sourceRoot":"","sources":["AvatarStory.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,UAAU,CAAC;AAE9B,IAAM,WAAW,GAAG,UAAC,IAAS;IAC5B,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,EAAG,CAAC;AAC9B,CAAC,CAAC;AAEF,WAAW,CAAC,QAAQ,GAAG;IACrB,QAAQ,EAAE;QACR,OAAO,EAAE,SAAS;QAClB,WAAW,EAAE,uDAAuD;KACrE;IACD,GAAG,EAAE;QACH,OAAO,EAAE,MAAM;QACf,WAAW,EAAE,gCAAgC;KAC9C;IACD,GAAG,EAAE;QACH,OAAO,EAAE,MAAM;QACf,WAAW,EAAE,uCAAuC;KACrD;IACD,IAAI,EAAE;QACJ,OAAO,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;QACtD,WAAW,EAAE,oBAAoB;KAClC;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,MAAM;QACf,WAAW,EAAE,gEAAgE;KAC9E;IACD,KAAK,EAAE;QACL,OAAO,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,OAAO,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC;QAC5D,WAAW,EAAE,qBAAqB;KACnC;IACD,IAAI,EAAE;QACJ,OAAO,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,OAAO,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;QACpD,WAAW,EAAE,0BAA0B;KACxC;IACD,KAAK,EAAE;QACL,OAAO,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAC3F,WAAW,EAAE,2BAA2B;KACzC;CACF,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import React from 'react';\nimport Avatar from './Avatar';\n\nconst AvatarStory = (args: any) => {\n  return <Avatar {...args} />;\n};\n\nAvatarStory.argTypes = {\n  overlaps: {\n    control: 'boolean',\n    description: 'Determines if the avatar overlaps with other elements'\n  },\n  src: {\n    control: 'text',\n    description: 'Source URL of the avatar image'\n  },\n  alt: {\n    control: 'text',\n    description: 'Alternative text for the avatar image'\n  },\n  size: {\n    control: {\n      type: 'select'\n    },\n    options: ['xl', 'lg', 'md', 'sm', 'xs', 'xxs', 'xxxs'],\n    description: 'Size of the avatar'\n  },\n  text: {\n    control: 'text',\n    description: 'Text to be displayed inside the avatar if no image is provided'\n  },\n  shape: {\n    control: {\n      type: 'select'\n    },\n    options: ['straight', 'rounded', 'smooth', 'curved', 'full'],\n    description: 'Shape of the avatar'\n  },\n  mask: {\n    control: {\n      type: 'select'\n    },\n    options: ['hex', 'hexed', 'blob', 'deca', 'diamond'],\n    description: 'Mask style of the avatar'\n  },\n  color: {\n    control: {\n      type: 'select'\n    },\n    options: ['default', 'primary', 'info', 'success', 'warning', 'danger', 'yellow', 'violet'],\n    description: 'Color theme of the avatar'\n  }\n};\n\nexport default AvatarStory;\n"]}