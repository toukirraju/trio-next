{"version":3,"file":"CustomCDDA.jsx","sourceRoot":"","sources":["CustomCDDA.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\nimport React, { useState } from 'react';\nimport { Dialog, DialogClose, DialogContent, DialogTrigger } from '../../Dialog/Dialog';\nimport { ReIcon } from '@/components/ReIcon/ReIcon';\nimport BaseParagraph from '../../base-paragraph/BaseParagraph';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { generateInitialValues } from '@/components/DynamicForm/utils/generateInitialValues';\nimport { InputRenderrer } from '@/components/DynamicForm/DynamicForm';\nimport { generateValidationSchema } from '@/components/DynamicForm/utils/generateValidationSchema';\n\ntype CustomCDDAType = {\n  name: string;\n  oldFormik?: any;\n  item?: any;\n  open: boolean;\n  setOpen: (open: boolean) => void;\n};\n\nconst CustomCDDA = (props: CustomCDDAType) => {\n  const { name, item, open, setOpen, oldFormik } = props || {};\n  const [editIndex, setEditIndex] = useState<number | null>(null);\n\n  const formik = useFormik({\n    initialValues: generateInitialValues(item.form.items),\n    validationSchema: Yup.object(generateValidationSchema(item.form.items, {})),\n    onSubmit: (values, { resetForm }) => {\n      if (editIndex !== null) {\n        // Update existing item\n        const updatedValues = [...oldFormik?.values?.[name]];\n        updatedValues[editIndex] = values;\n        oldFormik?.setFieldValue(name, updatedValues);\n      } else {\n        // Add new item\n        oldFormik?.setFieldValue(name, [...oldFormik?.values?.[name], values]);\n      }\n      setOpen(false);\n      resetForm();\n      setEditIndex(null); // Reset edit mode\n    }\n  });\n\n  const handleRemoveIndex = (index) => {\n    const updatedValues = [...oldFormik?.values?.[name]];\n    updatedValues.splice(index, 1);\n    oldFormik?.setFieldValue(name, updatedValues);\n  };\n\n  const handleEditIndex = (index) => {\n    setEditIndex(index);\n    const itemToEdit = oldFormik?.values?.[name][index];\n    formik.setValues(itemToEdit); // Populate form with existing values\n    setOpen(true);\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md col-span-full\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-800\">Co-founders</h2>\n        <Dialog open={open}>\n          <DialogTrigger>\n            <button\n              type=\"button\"\n              className=\"flex items-center gap-x-2 group bg-green-100 font-medium py-2 px-4 rounded-lg transition-transform transform hover:scale-105 hover:bg-green-200\"\n              onClick={() => {\n                setEditIndex(null); // Ensure form is in add mode\n                setOpen(true);\n              }}\n            >\n              <BaseParagraph\n                className=\"group-hover:opacity-100 duration-500 text-primary\"\n                size=\"xs\"\n                lead=\"normal\"\n              >\n                + Add a Co-Founder\n              </BaseParagraph>\n            </button>\n          </DialogTrigger>\n          <DialogContent className=\"bg-white rounded-md min-w-[900px] p-4\">\n            <div className=\"w-full flex items-center justify-between gap-4 p-3\">\n              <BaseParagraph size=\"md\" weight=\"semibold\">\n                {editIndex !== null ? 'Edit Co-Founder' : 'Add a Co-Founder'}\n              </BaseParagraph>\n              <button\n                onClick={() => setOpen(false)}\n                type=\"button\"\n                className=\"text-muted-400 hover:text-red-500 duration-200 z-50\"\n              >\n                <ReIcon iconName=\"AiOutlineClose\" />\n              </button>\n            </div>\n            <div className=\"w-full\">\n              <div className=\"bg-white p-6 w-full\">\n                <p className=\"text-gray-600 mb-4\">\n                  Tell us about you and any co-founders of this entity.\n                </p>\n\n                <form onSubmit={formik.handleSubmit} className=\"w-full\">\n                  {item.form.items.map((field, i) => {\n                    return (\n                      <InputRenderrer\n                        key={i}\n                        suggested=\"current-password\"\n                        name={field.name}\n                        formik={formik}\n                        value={formik?.values?.[field.name]}\n                        type={field.type}\n                        label={field.label}\n                        onChange={formik.handleChange}\n                        onBlur={formik?.handleBlur}\n                      />\n                    );\n                  })}\n\n                  <div className=\"flex justify-end\">\n                    <DialogClose>\n                      <button\n                        type=\"button\"\n                        className=\"bg-gray-200 text-gray-700 py-2 px-4 rounded-md mr-2 hover:bg-gray-300\"\n                        onClick={() => setOpen(false)}\n                      >\n                        Cancel\n                      </button>\n                    </DialogClose>\n                    <button\n                      type=\"submit\"\n                      className=\"bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600\"\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n      <p className=\"text-gray-600 mb-4\">\n        Do you have any other co-founders? You’ll need their name, email, phone, and address.\n      </p>\n      <div className=\"space-y-4\">\n        {oldFormik?.values?.[name].map((val, index) => {\n          const boldText = `${val[Object.keys(val)[0]]} (Co-Founder)`;\n          const secondaryText = `${val[Object.keys(val)[1]]}`;\n          const descriptionText = `${val[Object.keys(val)[2]]}`;\n          return (\n            <div\n              key={index}\n              className=\"bg-gray-50 p-4 rounded-lg flex justify-between items-center shadow-sm\"\n            >\n              <div>\n                <p className=\"font-medium text-gray-800\">{boldText}</p>\n                <p className=\"text-gray-600\">{secondaryText}</p>\n                <p className=\"text-gray-600\">{descriptionText}</p>\n              </div>\n              <div className=\"flex space-x-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => handleEditIndex(index)}\n                  className=\"text-blue-600 hover:underline\"\n                >\n                  Edit\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => handleRemoveIndex(index)}\n                  className=\"text-red-600 hover:underline\"\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomCDDA;\n"]}