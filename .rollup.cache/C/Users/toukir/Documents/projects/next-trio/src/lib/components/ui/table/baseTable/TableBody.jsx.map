{"version":3,"file":"TableBody.jsx","sourceRoot":"","sources":["TableBody.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport { cn } from '@/utils/cn';\nimport { useState } from 'react';\nimport Checkbox from '../../form/checkbox/Checkbox';\n\ntype TableBodyProps = {\n  columns: any[];\n  records: any[];\n  selectedRow: any[];\n  handleAllDataSelectedRecords: (row: any) => void;\n  showSelectBox: boolean;\n  rowClasses?: (row: any) => string;\n  cellClasses?:  ((row: any, value: any) => string | string | undefined) ;\n  striped?: boolean;\n  selectBoxWrapperClass?: string;\n};\n\nconst TableBody = ({\n  columns,\n  records,\n  selectedRow,\n  handleAllDataSelectedRecords,\n  showSelectBox,\n  rowClasses,\n  cellClasses,\n  striped = false,\n  selectBoxWrapperClass\n}: TableBodyProps) => {\n  return (\n    <tbody>\n      {records?.map((row, index) => {\n        return (\n          <tr\n            key={index}\n            className={cn(\n              ' block border-b-2 [&:last-child]:border-none md:table-row md:border-b border-muted-200 dark:border-muted-600',\n              rowClasses && rowClasses(row)\n            )}\n          >\n            {showSelectBox && (\n              <td\n                className={cn(\n                  // 'w-full flex flex-row-reverse py-2', // Small screens\n                  // 'md:w-10 md:flex   md:py-0', // Medium screens and up\n                  // 'pt-2 md:pt-0',\n                  selectBoxWrapperClass && selectBoxWrapperClass\n                )}\n              >\n                <Checkbox\n                  aria-label=\"row-select\"\n                  color=\"primary\"\n                  checked={selectedRow.some((item) => item.id === row.id)}\n                  onChange={() => handleAllDataSelectedRecords(row)}\n                />\n               \n              </td>\n            )}\n            {columns?.map((col, index) => (\n              <td\n                key={index}\n                className={cn(\n                  'flex justify-between items-center px-3 border-b [&:last-child]:border-none md:table-cell border-muted-200 dark:border-muted-600',\n                  typeof cellClasses === \"string\" ? cellClasses : cellClasses ? cellClasses(row, row[col.accessor]) : '',\n                  col?.classNames && col?.classNames\n                )}\n                style={{\n                  width: col?.width && `${col?.width}`,\n                  textAlign: col?.align && col?.align,\n                  color: col?.color && col?.color,\n                  background: col?.bg && col?.bg,\n                  fontWeight: col?.fontWidth && col?.fontWidth,\n                  fontSize: col?.fontSize && col?.fontSize,\n                  ...(col?.py && { padding: `${col?.py} 0` }),\n                  ...(col?.px && { padding: `0 ${col?.px}` }),\n                  ...(col?.pl && { paddingLeft: `${col?.pl}` }),\n                  ...(col?.pr && { paddingRight: `${col?.pr}` })\n                }}\n              >\n                <span className=\"inline-block md:hidden font-bold\">{col.header} </span>\n                {/* {row[col.accessor]} */}\n                {col?.render ? col?.render(row) : row[col.accessor]}\n              </td>\n            ))}\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n"]}