{"version":3,"file":"Dopdown.stories.jsx","sourceRoot":"","sources":["Dopdown.stories.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,QAA2B,MAAM,YAAY,CAAC;AAGrD,eAAe;IACb,KAAK,EAAE,aAAa;IACpB,SAAS,EAAE,QAAQ;IACnB,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,QAAQ,EAAE;QACR,WAAW,EAAE;YACX,OAAO,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;YACzB,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;SAC3B;QACD,KAAK,EAAE;YACL,OAAO,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACpD,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;SAC5B;QACD,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;SAC7B;KACF;CACM,CAAC;AAEV,IAAM,QAAQ,GAAyB,UAAC,IAAS,IAAK,OAAA,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,EAAG,EAAtB,CAAsB,CAAC;AAE7E,MAAM,CAAC,IAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,OAAO,CAAC,IAAI,GAAG;IACb,KAAK,EAAE,eAAe;IACtB,UAAU,EAAE,MAAM;IAClB,QAAQ,EAAE,CACR,EACE;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CACxC;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CACxC;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CAC1C;IAAA,GAAG,CACJ;IACD,OAAO,EAAE,GAAG;IACZ,WAAW,EAAE,OAAO;IACpB,KAAK,EAAE,QAAQ;IACf,SAAS,EAAE,IAAI;CAChB,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,SAAS,CAAC,IAAI,yBACT,OAAO,CAAC,IAAI,KACf,UAAU,EAAE,SAAS,EACrB,WAAW,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,sBAAsB,EAAG,GACzF,CAAC;AAEF,MAAM,CAAC,IAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7C,WAAW,CAAC,IAAI,yBACX,OAAO,CAAC,IAAI,KACf,SAAS,EAAE,KAAK,GACjB,CAAC;AAEF,MAAM,CAAC,IAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChD,cAAc,CAAC,IAAI,yBACd,OAAO,CAAC,IAAI,KACf,WAAW,EAAE,KAAK,GACnB,CAAC;AAEF,MAAM,CAAC,IAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7C,WAAW,CAAC,IAAI,yBACX,OAAO,CAAC,IAAI,KACf,KAAK,EAAE,QAAQ,GAChB,CAAC","sourcesContent":["import React from 'react';\nimport { Story, Meta } from '@storybook/react';\nimport Dropdown, { DropdownProps } from './Dropdown';\nimport { ReIcon } from '@/components/ReIcon/ReIcon';\n\nexport default {\n  title: 'Ui/Dropdown',\n  component: Dropdown,\n  tags: ['autodocs'],\n  argTypes: {\n    orientation: {\n      options: ['start', 'end'],\n      control: { type: 'radio' }\n    },\n    shape: {\n      options: ['straight', 'rounded', 'smooth', 'curved'],\n      control: { type: 'select' }\n    },\n    indicator: {\n      control: { type: 'boolean' }\n    }\n  }\n} as Meta;\n\nconst Template: Story<DropdownProps> = (args: any) => <Dropdown {...args} />;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  title: 'Notifications',\n  toggleIcon: 'bell',\n  children: (\n    <>\n      <div className=\"p-4\">Notification 1</div>\n      <div className=\"p-4\">Notification 2</div>\n      <div className=\"p-4\">Notification 3</div>\n    </>\n  ),\n  showAll: '#',\n  orientation: 'start',\n  shape: 'smooth',\n  indicator: true\n};\n\nexport const WithImage = Template.bind({});\nWithImage.args = {\n  ...Default.args,\n  toggleIcon: undefined,\n  toggleImage: <img src=\"avatar.jpg\" alt=\"User Avatar\" className=\"h-8 w-8 rounded-full\" />\n};\n\nexport const NoIndicator = Template.bind({});\nNoIndicator.args = {\n  ...Default.args,\n  indicator: false\n};\n\nexport const EndOrientation = Template.bind({});\nEndOrientation.args = {\n  ...Default.args,\n  orientation: 'end'\n};\n\nexport const CurvedShape = Template.bind({});\nCurvedShape.args = {\n  ...Default.args,\n  shape: 'curved'\n};\n"]}