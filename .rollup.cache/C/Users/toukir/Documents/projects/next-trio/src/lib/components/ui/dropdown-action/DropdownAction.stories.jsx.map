{"version":3,"file":"DropdownAction.stories.jsx","sourceRoot":"","sources":["DropdownAction.stories.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,cAAuC,MAAM,kBAAkB,CAAC;AACvE,OAAO,UAAU,MAAM,cAAc,CAAC;AAEtC,eAAe;IACb,KAAK,EAAE,oBAAoB;IAC3B,SAAS,EAAE,cAAc;IACzB,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,QAAQ,EAAE;QACR,WAAW,EAAE;YACX,OAAO,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;YACzB,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;SAC3B;QACD,UAAU,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;QAC/B,OAAO,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;QAC5B,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;KAC3B;CACM,CAAC;AAEV,IAAM,QAAQ,GAA+B,UAAC,IAAI,IAAK,OAAA,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,EAAG,EAA5B,CAA4B,CAAC;AAEpF,MAAM,CAAC,IAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,OAAO,CAAC,IAAI,GAAG;IACb,KAAK,EAAE,eAAe;IACtB,UAAU,EAAE,MAAM;IAClB,WAAW,EAAE,OAAO;IACpB,OAAO,EAAE,GAAG;IACZ,QAAQ,EAAE,CACR,EACE;MAAA,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAC9E;MAAA,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,iCAAiC,EACtF;MAAA,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,4BAA4B,EACxF;IAAA,GAAG,CACJ;CACF,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,SAAS,CAAC,IAAI,yBACT,OAAO,CAAC,IAAI,KACf,UAAU,EAAE,SAAS,EACrB,WAAW,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,sBAAsB,EAAG,GACzF,CAAC;AAEF,MAAM,CAAC,IAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChD,cAAc,CAAC,IAAI,yBACd,OAAO,CAAC,IAAI,KACf,WAAW,EAAE,KAAK,GACnB,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,SAAS,CAAC,IAAI,yBACT,OAAO,CAAC,IAAI,KACf,OAAO,EAAE,SAAS,GACnB,CAAC;AAEF,MAAM,CAAC,IAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjD,eAAe,CAAC,IAAI,yBACf,OAAO,CAAC,IAAI,KACf,SAAS,EAAE,cAAc,GAC1B,CAAC","sourcesContent":["import React from 'react';\nimport { Story, Meta } from '@storybook/react';\nimport DropdownAction, { DropdownActionProps } from './DropdownAction';\nimport ActionItem from './ActionItem';\n\nexport default {\n  title: 'Ui/Dropdown Action',\n  component: DropdownAction,\n  tags: ['autodocs'],\n  argTypes: {\n    orientation: {\n      options: ['start', 'end'],\n      control: { type: 'radio' }\n    },\n    toggleIcon: { control: 'text' },\n    showAll: { control: 'text' },\n    title: { control: 'text' }\n  }\n} as Meta;\n\nconst Template: Story<DropdownActionProps> = (args) => <DropdownAction {...args} />;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  title: 'Notifications',\n  toggleIcon: 'bell',\n  orientation: 'start',\n  showAll: '#',\n  children: (\n    <>\n      <ActionItem icon=\"message\" text=\"New Message\" subtext=\"You have a new message\" />\n      <ActionItem icon=\"alert\" text=\"System Alert\" subtext=\"Server is running low on memory\" />\n      <ActionItem icon=\"update\" text=\"Update Available\" subtext=\"A new version is available\" />\n    </>\n  )\n};\n\nexport const WithImage = Template.bind({});\nWithImage.args = {\n  ...Default.args,\n  toggleIcon: undefined,\n  toggleImage: <img src=\"avatar.jpg\" alt=\"User Avatar\" className=\"h-8 w-8 rounded-full\" />\n};\n\nexport const EndOrientation = Template.bind({});\nEndOrientation.args = {\n  ...Default.args,\n  orientation: 'end'\n};\n\nexport const NoShowAll = Template.bind({});\nNoShowAll.args = {\n  ...Default.args,\n  showAll: undefined\n};\n\nexport const CustomClassName = Template.bind({});\nCustomClassName.args = {\n  ...Default.args,\n  className: 'custom-class'\n};\n"]}