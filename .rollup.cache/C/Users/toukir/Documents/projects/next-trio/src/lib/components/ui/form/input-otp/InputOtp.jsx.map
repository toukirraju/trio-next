{"version":3,"file":"InputOtp.jsx","sourceRoot":"","sources":["InputOtp.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RE_DIGIT } from '@/utils/strings';\nimport React, { type FC, useMemo } from 'react';\n\nexport type InputOtpProps = {\n  value: string;\n  valueLength: number;\n  onChange: (value: string) => void;\n  color?: 'default' | 'contrast' | 'muted' | 'mutedContrast';\n  shape?: 'smooth' | 'rounded' | 'curved' | 'full';\n};\n\nconst InputOtp: FC<InputOtpProps> = ({\n  value,\n  valueLength,\n  color = 'default',\n  shape = 'smooth',\n  onChange\n}) => {\n  const valueItems = useMemo(() => {\n    const valueArray = value.split('');\n    const items: Array<string> = [];\n\n    for (let i = 0; i < valueLength; i++) {\n      const char = valueArray[i];\n\n      if (RE_DIGIT.test(char)) {\n        items.push(char);\n      } else {\n        items.push('');\n      }\n    }\n\n    return items;\n  }, [value, valueLength]);\n\n  const focusToNextInput = (target: HTMLElement) => {\n    const nextElementSibling = target.nextElementSibling as HTMLInputElement | null;\n\n    if (nextElementSibling) {\n      nextElementSibling.focus();\n    }\n  };\n\n  const focusToPrevInput = (target: HTMLElement) => {\n    const previousElementSibling = target.previousElementSibling as HTMLInputElement | null;\n\n    if (previousElementSibling) {\n      previousElementSibling.focus();\n    }\n  };\n\n  const inputOnChange = (e: React.ChangeEvent<HTMLInputElement>, idx: number) => {\n    const target = e.target;\n    let targetValue = target.value.trim();\n    const isTargetValueDigit = RE_DIGIT.test(targetValue);\n\n    if (!isTargetValueDigit && targetValue !== '') {\n      return;\n    }\n\n    const nextInputEl = target.nextElementSibling as HTMLInputElement | null;\n\n    // only delete digit if next input element has no value\n    if (!isTargetValueDigit && nextInputEl && nextInputEl.value !== '') {\n      return;\n    }\n\n    targetValue = isTargetValueDigit ? targetValue : ' ';\n\n    const targetValueLength = targetValue.length;\n\n    if (targetValueLength === 1) {\n      const newValue = value.substring(0, idx) + targetValue + value.substring(idx + 1);\n\n      onChange(newValue);\n\n      if (!isTargetValueDigit) {\n        return;\n      }\n\n      focusToNextInput(target);\n    } else {\n      onChange(targetValue);\n\n      target.blur();\n    }\n  };\n\n  const inputOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const { key } = e;\n    const target = e.target as HTMLInputElement;\n\n    if (key === 'ArrowRight' || key === 'ArrowDown') {\n      e.preventDefault();\n      return focusToNextInput(target);\n    }\n\n    if (key === 'ArrowLeft' || key === 'ArrowUp') {\n      e.preventDefault();\n      return focusToPrevInput(target);\n    }\n\n    const targetValue = target.value;\n\n    // keep the selection range position\n    // if the same digit was typed\n    target.setSelectionRange(0, targetValue.length);\n\n    if (e.key !== 'Backspace' || target.value !== '') {\n      return;\n    }\n\n    focusToPrevInput(target);\n  };\n\n  const inputOnFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    const { target } = e;\n\n    // keep focusing back until previous input\n    // element has value\n    const prevInputEl = target.previousElementSibling as HTMLInputElement | null;\n\n    if (prevInputEl && prevInputEl.value === '') {\n      return prevInputEl.focus();\n    }\n\n    target.setSelectionRange(0, target.value.length);\n  };\n  return (\n    <div className=\"flex w-full flex-row items-center justify-center gap-3\">\n      {valueItems.map((digit, idx) => (\n        <input\n          key={idx}\n          type=\"text\"\n          inputMode=\"numeric\"\n          autoComplete=\"one-time-code\"\n          pattern=\"\\d{1}\"\n          maxLength={valueLength}\n          className={`flex w-16 flex-col items-center justify-center border py-5 text-center text-4xl text-muted-800 outline-none ring-primary-700 placeholder:text-muted-300 focus:ring-1 dark:text-muted-100 dark:placeholder:text-muted-700\n          ${\n            color === 'default'\n              ? 'hover:border-muted-300 dark:hover:border-muted-600 border-muted-200 bg-white focus:bg-muted-50 dark:border-muted-700 dark:bg-muted-800 dark:focus:bg-muted-900'\n              : ''\n          }\n          ${\n            color === 'contrast'\n              ? 'hover:border-muted-300 dark:hover:border-muted-700 bg-white focus:bg-muted-50 dark:border-muted-800 dark:bg-muted-950 dark:focus:bg-muted-900'\n              : ''\n          }\n          ${\n            color === 'muted'\n              ? 'hover:border-muted-300 dark:hover:border-muted-600 border-muted-200 bg-muted-100 focus:bg-muted-100 dark:border-muted-700 dark:bg-muted-800 dark:focus:bg-muted-900'\n              : ''\n          }\n          ${\n            color === 'mutedContrast'\n              ? 'hover:border-muted-300 dark:hover:border-muted-700 border-muted-200 bg-muted-100 focus:bg-muted-100 dark:border-muted-800 dark:bg-muted-950 dark:focus:bg-muted-900'\n              : ''\n          }\n          ${shape === 'rounded' ? 'rounded-md' : ''}\n          ${shape === 'smooth' ? 'rounded-lg' : ''}\n          ${shape === 'curved' ? 'rounded-xl' : ''}\n          ${shape === 'full' ? 'rounded-full' : ''}\n          `}\n          value={digit}\n          onChange={(e) => inputOnChange(e, idx)}\n          onKeyDown={inputOnKeyDown}\n          onFocus={inputOnFocus}\n          placeholder=\"0\"\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default InputOtp;\n"]}