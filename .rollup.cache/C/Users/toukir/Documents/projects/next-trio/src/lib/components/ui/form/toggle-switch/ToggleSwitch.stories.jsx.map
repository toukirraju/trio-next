{"version":3,"file":"ToggleSwitch.stories.jsx","sourceRoot":"","sources":["ToggleSwitch.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Meta, Story } from '@storybook/react';\nimport ToggleSwitch from './ToggleSwitch';\n\n// Meta configuration for Storybook\nconst meta: Meta<typeof ToggleSwitch> = {\n  title: 'Ui/ToggleSwitch',\n  component: ToggleSwitch,\n  tags: ['autodocs'],\n  argTypes: {\n    label: { control: 'text' },\n    sublabel: { control: 'text' },\n    color: {\n      control: {\n        type: 'select',\n        options: ['default', 'primary', 'info', 'success', 'warning', 'danger']\n      }\n    },\n    checked: { control: 'boolean' },\n    disabled: { control: 'boolean' }\n  }\n};\n\nexport default meta;\n\nconst Template: Story<React.ComponentProps<typeof ToggleSwitch>> = (args) => {\n  const [isChecked, setIsChecked] = useState(args.checked || false);\n  return <ToggleSwitch {...args} checked={isChecked} onChange={() => setIsChecked(!isChecked)} />;\n};\n\n// Default story\nexport const Default = Template.bind({});\nDefault.args = {\n  id: 'default-toggle',\n  label: 'Default Toggle',\n  color: 'default'\n};\n\n// With Sublabel story\nexport const WithSublabel = Template.bind({});\nWithSublabel.args = {\n  ...Default.args,\n  id: 'sublabel-toggle',\n  label: 'Toggle with Sublabel',\n  sublabel: 'This is a description of the toggle'\n};\n\n// Checked story\nexport const Checked = Template.bind({});\nChecked.args = {\n  ...Default.args,\n  id: 'checked-toggle',\n  label: 'Checked Toggle',\n  checked: true\n};\n\n// Disabled story\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  ...Default.args,\n  id: 'disabled-toggle',\n  label: 'Disabled Toggle',\n  disabled: true\n};\n\n// Different Colors story\nexport const DifferentColors: Story<React.ComponentProps<typeof ToggleSwitch>> = () => (\n  <div className=\"space-y-4\">\n    <ToggleSwitch id=\"default-color\" label=\"Default Color\" color=\"default\" />\n    <ToggleSwitch id=\"primary-color\" label=\"Primary Color\" color=\"primary\" />\n    <ToggleSwitch id=\"info-color\" label=\"Info Color\" color=\"info\" />\n    <ToggleSwitch id=\"success-color\" label=\"Success Color\" color=\"success\" />\n    <ToggleSwitch id=\"warning-color\" label=\"Warning Color\" color=\"warning\" />\n    <ToggleSwitch id=\"danger-color\" label=\"Danger Color\" color=\"danger\" />\n  </div>\n);\n\n// Custom Styling story\nexport const CustomStyling = Template.bind({});\nCustomStyling.args = {\n  ...Default.args,\n  id: 'custom-toggle',\n  label: 'Custom Styled Toggle',\n  color: 'primary',\n  className: 'max-w-xs bg-gray-100 p-4 rounded-lg'\n};\n"]}