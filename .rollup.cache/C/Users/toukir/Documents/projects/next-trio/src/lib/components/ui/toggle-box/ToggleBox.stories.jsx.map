{"version":3,"file":"ToggleBox.stories.jsx","sourceRoot":"","sources":["ToggleBox.stories.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,SAAS,MAAM,aAAa,CAAC;AAEpC,IAAM,IAAI,GAA2B;IACnC,KAAK,EAAE,cAAc;IACrB,SAAS,EAAE,SAAS;IACpB,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;SACrD;QACD,KAAK,EAAE;YACL,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;SAC9G;QACD,QAAQ,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;QAChC,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;QAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;QACpC,MAAM,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;KAC/B;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,IAAM,QAAQ,GAAU;IACtB,MAAM,EAAE,UAAC,IAAI,IAAK,OAAA,CAChB,CAAC,GAAG,CAAC,SAAS,CAAC,kCAAkC,CAC/C;MAAA,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAClB;QAAA,CAAC,CAAC,CAAC,+DAA+D,EAAE,CAAC,CACvE;MAAA,EAAE,SAAS,CACb;IAAA,EAAE,GAAG,CAAC,CACP,EANiB,CAMjB;CACF,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,yBACf,QAAQ,KACX,IAAI,EAAE;QACJ,KAAK,EAAE,mBAAmB;QAC1B,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,UAAU;QACjB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,KAAK;KACZ,GACF,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,yBACrB,QAAQ,KACX,IAAI,wBACC,OAAO,CAAC,IAAI,KACf,KAAK,EAAE,iBAAiB,EACxB,IAAI,EAAE,IAAI,MAEb,CAAC;AAEF,MAAM,CAAC,IAAM,YAAY,yBACpB,QAAQ,KACX,IAAI,wBACC,OAAO,CAAC,IAAI,KACf,MAAM,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,mBAAmB,CAAC,aAAa,EAAE,EAAE,CAAC,MAE/D,CAAC;AAEF,MAAM,CAAC,IAAM,YAAY,yBACpB,QAAQ,KACX,IAAI,wBACC,OAAO,CAAC,IAAI,KACf,KAAK,EAAE,gBAAgB,EACvB,YAAY,EAAE,IAAI,MAErB,CAAC;AAEF,MAAM,CAAC,IAAM,MAAM,yBACd,QAAQ,KACX,IAAI,wBACC,OAAO,CAAC,IAAI,KACf,KAAK,EAAE,kBAAkB,EACzB,MAAM,EAAE,IAAI,MAEf,CAAC;AAEF,MAAM,CAAC,IAAM,YAAY,yBACpB,QAAQ,KACX,IAAI,wBACC,OAAO,CAAC,IAAI,KACf,KAAK,EAAE,eAAe,EACtB,KAAK,EAAE,SAAS,MAEnB,CAAC;AAEF,MAAM,CAAC,IAAM,WAAW,yBACnB,QAAQ,KACX,IAAI,wBACC,OAAO,CAAC,IAAI,KACf,KAAK,EAAE,cAAc,EACrB,KAAK,EAAE,QAAQ,MAElB,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,yBACrB,QAAQ,KACX,IAAI,wBACC,OAAO,CAAC,IAAI,KACf,KAAK,EAAE,mBAAmB,EAC1B,QAAQ,EAAE,KAAK,MAElB,CAAC","sourcesContent":["import React from 'react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport ToggleBox from './ToggleBox';\n\nconst meta: Meta<typeof ToggleBox> = {\n  title: 'UI/ToggleBox',\n  component: ToggleBox,\n  tags: ['autodocs'],\n  argTypes: {\n    shape: {\n      control: 'select',\n      options: ['straight', 'rounded', 'smooth', 'curved'],\n    },\n    color: {\n      control: 'select',\n      options: ['default', 'contrast', 'muted', 'mutedContrast', 'primary', 'info', 'success', 'warning', 'danger'],\n    },\n    isToggle: { control: 'boolean' },\n    open: { control: 'boolean' },\n    growOnExpand: { control: 'boolean' },\n    spaced: { control: 'boolean' },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof ToggleBox>;\n\nconst Template: Story = {\n  render: (args) => (\n    <div className=\"p-4 bg-gray-100 dark:bg-gray-800\">\n      <ToggleBox {...args}>\n        <p>This is the content of the ToggleBox. It can be any React node.</p>\n      </ToggleBox>\n    </div>\n  ),\n};\n\nexport const Default: Story = {\n  ...Template,\n  args: {\n    title: 'Default ToggleBox',\n    shape: 'smooth',\n    color: 'contrast',\n    isToggle: true,\n    open: false,\n  },\n};\n\nexport const OpenByDefault: Story = {\n  ...Template,\n  args: {\n    ...Default.args,\n    title: 'Open by Default',\n    open: true,\n  },\n};\n\nexport const CustomHeader: Story = {\n  ...Template,\n  args: {\n    ...Default.args,\n    header: <h3 className=\"text-xl font-bold\">Custom Header</h3>,\n  },\n};\n\nexport const GrowOnExpand: Story = {\n  ...Template,\n  args: {\n    ...Default.args,\n    title: 'Grow on Expand',\n    growOnExpand: true,\n  },\n};\n\nexport const Spaced: Story = {\n  ...Template,\n  args: {\n    ...Default.args,\n    title: 'Spaced ToggleBox',\n    spaced: true,\n  },\n};\n\nexport const PrimaryColor: Story = {\n  ...Template,\n  args: {\n    ...Default.args,\n    title: 'Primary Color',\n    color: 'primary',\n  },\n};\n\nexport const CurvedShape: Story = {\n  ...Template,\n  args: {\n    ...Default.args,\n    title: 'Curved Shape',\n    shape: 'curved',\n  },\n};\n\nexport const NonToggleable: Story = {\n  ...Template,\n  args: {\n    ...Default.args,\n    title: 'Non-Togglable Box',\n    isToggle: false,\n  },\n};"]}