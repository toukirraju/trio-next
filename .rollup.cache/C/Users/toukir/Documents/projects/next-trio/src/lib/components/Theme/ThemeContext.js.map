{"version":3,"file":"ThemeContext.js","sourceRoot":"","sources":["ThemeContext.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  SetStateAction,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n// import Loader from \"../Loader/Loader\";\r\nimport useTWVariableColor from \"../../hooks/useTWVariableColor\";\r\n\r\ntype ThemeContextType = {\r\n  theme: {\r\n    name: string;\r\n    mode: string;\r\n    colorVars: {\r\n      primary: string;\r\n      secondary: string;\r\n    };\r\n  };\r\n  themeList: Array<{\r\n    name: string;\r\n    mode: string;\r\n    colorVars: {\r\n      primary: string;\r\n      secondary: string;\r\n    };\r\n  }>;\r\n  setTheme: React.Dispatch<\r\n    React.SetStateAction<{\r\n      name: string;\r\n      mode: string;\r\n      colorVars: {\r\n        primary: string;\r\n        secondary: string;\r\n      };\r\n    }>\r\n  >;\r\n  addTheme: (theme: {\r\n    name: string;\r\n    mode?: string;\r\n    colorVars: {\r\n      primary: string;\r\n      secondary: string;\r\n    };\r\n  }) => void;\r\n  removeTheme: (themeName: string) => void;\r\n  toggleTheme: (newTheme: {\r\n    name: string;\r\n    mode: string;\r\n    colorVars: {\r\n      primary: string;\r\n      secondary: string;\r\n    };\r\n  }) => void;\r\n  toggleDarkMode: (mode: string) => void;\r\n  changeTheme: (theme: {\r\n    name: string;\r\n    colorVars: {\r\n      primary: string;\r\n      secondary: string;\r\n    };\r\n  }) => void;\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType>({\r\n  theme: {\r\n    name: \"\",\r\n    mode: \"\",\r\n    colorVars: {\r\n      primary: \"\",\r\n      secondary: \"\",\r\n    },\r\n  },\r\n  themeList: [],\r\n  setTheme: () => {},\r\n  addTheme: () => {},\r\n  removeTheme: () => {},\r\n  toggleTheme: () => {},\r\n  toggleDarkMode: () => {},\r\n  changeTheme: () => {},\r\n});\r\n\r\ntype ThemeProviderProps = {\r\n  children: React.ReactNode;\r\n  defaultTheme?: {\r\n    name: string;\r\n    mode: string;\r\n    colorVars: {\r\n      primary: string;\r\n      secondary: string;\r\n    };\r\n  };\r\n  themeLoader?: React.ReactNode;\r\n};\r\nexport const ThemeProvider = ({\r\n  children,\r\n  defaultTheme,\r\n  themeLoader,\r\n}: ThemeProviderProps) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [primary, setPrimary] = useTWVariableColor({ variable: \"primary\" }) as [\r\n    string,\r\n    React.Dispatch<React.SetStateAction<string>>,\r\n  ];\r\n  const [secondary, setSecondary] = useTWVariableColor({\r\n    variable: \"secondary\",\r\n  }) as [string, React.Dispatch<React.SetStateAction<string>>];\r\n  const [themeList, setThemeList] = useState<\r\n    Array<{\r\n      name: string;\r\n      mode: string;\r\n      colorVars: {\r\n        primary: string;\r\n        secondary: string;\r\n      };\r\n    }>\r\n  >([]);\r\n\r\n  const [theme, setTheme] = useState({\r\n    name: \"default\",\r\n    mode: \"light\",\r\n    colorVars: {\r\n      primary: \"#164969\",\r\n      secondary: \"#4d3cd3\",\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    const InitTheme = async () => {\r\n      // set and get from local storage\r\n      const localTheme = localStorage.getItem(\"localTheme\");\r\n      const localThemeList = localStorage.getItem(\"themeList\");\r\n\r\n      if (localTheme && localThemeList) {\r\n        // set theme and themeList from local storage\r\n        const themeObj = JSON.parse(localTheme);\r\n        setTheme(themeObj);\r\n        setThemeList(JSON.parse(localThemeList));\r\n\r\n        setPrimary(themeObj.colorVars.primary);\r\n        setSecondary(themeObj.colorVars.secondary);\r\n        // set dark mode local storage\r\n        if (themeObj.mode === \"dark\") {\r\n          document.documentElement.classList.add(\"dark\");\r\n          localStorage.setItem(\"darkMode\", \"true\");\r\n        } else if (themeObj.mode === \"light\") {\r\n          document.documentElement.classList.remove(\"dark\");\r\n          localStorage.setItem(\"darkMode\", \"false\");\r\n        } else if (themeObj.mode === \"system\") {\r\n          if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n            localStorage.setItem(\"darkMode\", \"true\");\r\n            document.documentElement.classList.add(\"dark\");\r\n          } else {\r\n            localStorage.setItem(\"darkMode\", \"false\");\r\n            document.documentElement.classList.remove(\"dark\");\r\n          }\r\n        }\r\n      } else if (defaultTheme) {\r\n        // set default theme and themeList\r\n        setTheme(defaultTheme);\r\n        setPrimary(defaultTheme.colorVars.primary);\r\n        setSecondary(defaultTheme.colorVars.secondary);\r\n        localStorage.setItem(\"localTheme\", JSON.stringify(defaultTheme));\r\n        setThemeList([defaultTheme]);\r\n        localStorage.setItem(\"themeList\", JSON.stringify([defaultTheme]));\r\n        // set dark mode local storage\r\n        if (defaultTheme.mode) {\r\n          document.documentElement.classList.add(defaultTheme.mode);\r\n          localStorage.setItem(\r\n            \"darkMode\",\r\n            defaultTheme.mode === \"dark\" ? \"true\" : \"false\"\r\n          );\r\n        }\r\n      } else {\r\n        // set default theme and themeList\r\n        localStorage.setItem(\"localTheme\", JSON.stringify(theme));\r\n        setThemeList([theme]);\r\n        localStorage.setItem(\"themeList\", JSON.stringify([theme]));\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    try {\r\n      InitTheme();\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  }, [theme.name]);\r\n\r\n  const changeTheme = ({\r\n    name,\r\n    colorVars,\r\n  }: {\r\n    name: string;\r\n    colorVars: { primary: string; secondary: string };\r\n  }) => {\r\n    const themeExist = themeList.find((theme) => theme.name === name);\r\n    if (themeExist) {\r\n      setTheme({\r\n        name,\r\n        mode: themeExist.mode,\r\n        colorVars,\r\n      });\r\n      // update primary and secondary colors\r\n      setPrimary(colorVars.primary);\r\n      setSecondary(colorVars.secondary);\r\n\r\n      // update theme list\r\n      const updatedThemeList = themeList.map((theme) => {\r\n        if (theme.name === name) {\r\n          return {\r\n            name,\r\n            mode: theme.mode,\r\n            colorVars,\r\n          };\r\n        } else {\r\n          return theme;\r\n        }\r\n      });\r\n      setThemeList(updatedThemeList);\r\n      //update localstorage\r\n      localStorage.setItem(\r\n        \"localTheme\",\r\n        JSON.stringify({ name, mode: themeExist.mode, colorVars })\r\n      );\r\n      localStorage.setItem(\"themeList\", JSON.stringify(updatedThemeList));\r\n    } else {\r\n      console.error(`theme ${name} not found in the themeList.`);\r\n    }\r\n  };\r\n\r\n  const toggleTheme = (\r\n    newTheme: SetStateAction<{\r\n      name: string;\r\n      mode: string;\r\n      colorVars: { primary: string; secondary: string };\r\n    }>\r\n  ) => {\r\n    setTheme(newTheme);\r\n    //update localstorage\r\n    localStorage.setItem(\"localTheme\", JSON.stringify(newTheme));\r\n  };\r\n\r\n  const toggleDarkMode = (mode: string) => {\r\n    // toggle dark,light,system mode\r\n    if (mode === \"dark\") {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"darkMode\", \"true\");\r\n\r\n      // update theme mode\r\n      setTheme({ ...theme, mode: \"dark\" });\r\n      //update localstorage\r\n      localStorage.setItem(\r\n        \"localTheme\",\r\n        JSON.stringify({ ...theme, mode: \"dark\" })\r\n      );\r\n      //update theme list\r\n      const updatedThemeList = themeList.map((themeItem) => {\r\n        if (themeItem.name === theme.name) {\r\n          return { ...themeItem, mode: \"dark\" };\r\n        } else {\r\n          return themeItem;\r\n        }\r\n      });\r\n      setThemeList(updatedThemeList);\r\n      //update localstorage\r\n      localStorage.setItem(\"themeList\", JSON.stringify(updatedThemeList));\r\n    } else if (mode === \"light\") {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"darkMode\", \"false\");\r\n      // update theme mode\r\n      setTheme({ ...theme, mode: \"light\" });\r\n      //update localstorage\r\n      localStorage.setItem(\r\n        \"localTheme\",\r\n        JSON.stringify({ ...theme, mode: \"light\" })\r\n      );\r\n      //update theme list\r\n      const updatedThemeList = themeList.map((themeItem) => {\r\n        if (themeItem.name === theme.name) {\r\n          return { ...themeItem, mode: \"light\" };\r\n        } else {\r\n          return themeItem;\r\n        }\r\n      });\r\n      setThemeList(updatedThemeList);\r\n      //update localstorage\r\n      localStorage.setItem(\"themeList\", JSON.stringify(updatedThemeList));\r\n    } else if (mode === \"system\") {\r\n      if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n        document.documentElement.classList.add(\"dark\");\r\n        localStorage.setItem(\"darkMode\", \"true\");\r\n        // update theme mode\r\n        setTheme({ ...theme, mode: \"system\" });\r\n        //update localstorage\r\n        localStorage.setItem(\r\n          \"localTheme\",\r\n          JSON.stringify({ ...theme, mode: \"system\" })\r\n        );\r\n        //update theme list\r\n        const updatedThemeList = themeList.map((themeItem) => {\r\n          if (themeItem.name === theme.name) {\r\n            return { ...themeItem, mode: \"system\" };\r\n          } else {\r\n            return themeItem;\r\n          }\r\n        });\r\n        setThemeList(updatedThemeList);\r\n        //update localstorage\r\n        localStorage.setItem(\"themeList\", JSON.stringify(updatedThemeList));\r\n      } else {\r\n        document.documentElement.classList.remove(\"dark\");\r\n        localStorage.setItem(\"darkMode\", \"false\");\r\n        // update theme mode\r\n        setTheme({ ...theme, mode: \"system\" });\r\n        //update localstorage\r\n        localStorage.setItem(\r\n          \"localTheme\",\r\n          JSON.stringify({ ...theme, mode: \"system\" })\r\n        );\r\n        //update theme list\r\n        const updatedThemeList = themeList.map((themeItem) => {\r\n          if (themeItem.name === theme.name) {\r\n            return { ...themeItem, mode: \"system\" };\r\n          } else {\r\n            return themeItem;\r\n          }\r\n        });\r\n        setThemeList(updatedThemeList);\r\n        //update localstorage\r\n        localStorage.setItem(\"themeList\", JSON.stringify(updatedThemeList));\r\n      }\r\n    }\r\n  };\r\n\r\n  const addTheme = (theme: {\r\n    name: string;\r\n    colorVars: { primary: string; secondary: string };\r\n  }) => {\r\n    //theme should have name and colorVars and should not be already in the themeList\r\n    const themeExist = themeList.find(\r\n      (themeItem) => themeItem.name === theme.name\r\n    );\r\n    if (!themeExist) {\r\n      setThemeList([...themeList, { ...theme, mode: \"light\" }]);\r\n      //update localstorage\r\n      localStorage.setItem(\r\n        \"themeList\",\r\n        JSON.stringify([...themeList, { ...theme, mode: \"light\" }])\r\n      );\r\n    } else {\r\n      console.error(`theme ${theme.name} already exists in the themeList`);\r\n    }\r\n  };\r\n\r\n  const removeTheme = (themeName: string) => {\r\n    // if theme name is default then it will not be removed and alert will be shown\r\n    if (themeName === \"default\") {\r\n      alert(\"Default theme cannot be removed.\");\r\n      return;\r\n    }\r\n    //find theme in themeList and remove it\r\n    const updatedThemeList = themeList.filter(\r\n      (themeItem) => themeItem.name !== themeName\r\n    );\r\n    setThemeList(updatedThemeList);\r\n    //update localstorage\r\n    localStorage.setItem(\"themeList\", JSON.stringify(updatedThemeList));\r\n\r\n    //remove theme from local storage\r\n    if (theme.name === themeName) {\r\n      localStorage.removeItem(\"localTheme\");\r\n      setTheme(updatedThemeList[0]);\r\n      localStorage.setItem(\"localTheme\", JSON.stringify(updatedThemeList[0]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        themeList,\r\n        setTheme,\r\n        addTheme,\r\n        removeTheme,\r\n        toggleTheme,\r\n        toggleDarkMode,\r\n        changeTheme,\r\n      }}\r\n    >\r\n      {loading && themeLoader ? themeLoader : children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"]}