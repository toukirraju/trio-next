{"version":3,"file":"useTWVariableColor.js","sourceRoot":"","sources":["useTWVariableColor.ts"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\r\nimport getColorPalette from '@/utils/colors';\r\nimport { useState, useEffect } from 'react';\r\n\r\ntype ShadeOption = '25' | '50' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '950' | 'light' | 'dark';\r\n\r\n\r\nconst useTWVariableColor = (variable: string, options?: {\r\n    shades?: ShadeOption[],\r\n    algorithm?: \"base-500\" | \"base-primary\",\r\n    colorType?: \"hex\" | \"rgb\";\r\n    alpha?: number;\r\n}) => {\r\n    const [variableColor, setVariableColor] = useState('#000000');\r\n\r\n    if (!variable) {\r\n        console.error(`Variable not passed as props. Please pass props like useTWVariableColor('primary',{shades:['light','dark']})`);\r\n        return [variableColor, setVariableColor];\r\n    }\r\n\r\n    useEffect(() => {\r\n        const styleSheet = document.styleSheets[0];\r\n\r\n        const updateColorVariables = () => {\r\n            let rootRule = styleSheet.cssRules[0] as CSSStyleRule;\r\n            if (!rootRule || rootRule.selectorText !== ':root') {\r\n                styleSheet.insertRule(':root {}', 0);\r\n                rootRule = styleSheet.cssRules[0] as CSSStyleRule;\r\n            }\r\n\r\n            // Set base variable\r\n            rootRule.style.setProperty(`--${variable}`, variableColor);\r\n\r\n            if (options?.algorithm === \"base-500\") {\r\n                // Use getColorPalette function\r\n                const palette = getColorPalette(variableColor, {\r\n                    colorType: options.colorType,\r\n                    alpha: options.alpha,\r\n                    shades: options.shades\r\n                });\r\n\r\n                if (palette) {\r\n                    Object.entries(palette.colors).forEach(([shade, color]) => {\r\n                        rootRule.style.setProperty(`--${variable}-${shade}`, color);\r\n                    });\r\n                }\r\n            } else {\r\n                // Use the existing base-primary algorithm\r\n                const [h, s, l] = variableColor.startsWith('#')\r\n                    ? hexToHSL(variableColor)\r\n                    : hexToHSL(`rgb(${variableColor})`);\r\n\r\n                // Generate shades\r\n                options?.shades?.forEach((shade) => {\r\n                    if (shade === 'light') {\r\n                        const shadeValue = hslToHex(h, s, adjustLightness(l, 'light'));\r\n                        rootRule.style.setProperty(`--${variable}-${shade}`, shadeValue);\r\n                    } else if (shade === 'dark') {\r\n                        const shadeValue = hslToHex(h, s, adjustLightness(l, 'dark'));\r\n                        rootRule.style.setProperty(`--${variable}-${shade}`, shadeValue);\r\n                    } else {\r\n                        const shadeValue = hslToHex(h, s, adjustLightness(l, shade));\r\n                        rootRule.style.setProperty(`--${variable}-${shade}`, shadeValue);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        updateColorVariables();\r\n    }, [variableColor, variable, options]);\r\n\r\n    return [variableColor, setVariableColor];\r\n};\r\n\r\nconst adjustLightness = (l: number, shade: string) => {\r\n    const shadeMap = {\r\n        '25': 0.97,\r\n        '50': 0.95,\r\n        '100': 0.9,\r\n        '200': 0.8,\r\n        '300': 0.7,\r\n        '400': 0.6,\r\n        '500': 0.5,\r\n        '600': 0.4,\r\n        '700': 0.3,\r\n        '800': 0.2,\r\n        '900': 0.1,\r\n        '950': 0.05,\r\n        'dark': 0.05,\r\n        \"light\": 0.95,\r\n    } as Record<string, number>;\r\n    return Math.round((shadeMap[shade] || 0.5) * 100);\r\n};\r\n\r\nexport default useTWVariableColor;\r\n\r\n// Color conversion functions\r\nfunction hexToHSL(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!result || result.length < 4) return [0, 0, 0]; // Return black color if invalid hex\r\n\r\n    let r = parseInt(result[1], 16);\r\n    let g = parseInt(result[2], 16);\r\n    let b = parseInt(result[3], 16);\r\n\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n\r\n    if (max !== min) {\r\n        if (l < 0.5) {\r\n            s = (max - min) / (max + min);\r\n        } else {\r\n            s = (max - min) / (2.0 - max - min);\r\n        }\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / (max - min);\r\n                break;\r\n            case g:\r\n                h = 2.0 + (b - r) / (max - min);\r\n                break;\r\n            case b:\r\n                h = 4.0 + (r - g) / (max - min);\r\n                break;\r\n        }\r\n    }\r\n    h = Math.round(h * 60);\r\n    if (h < 0) h += 360;\r\n    l = Math.round(l * 100);\r\n    s = Math.round(s * 100);\r\n    return [h, s, l];\r\n}\r\n\r\nfunction hslToHex(h: number, s: number, l: number) {\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n    let r, g, b;\r\n    if (s === 0) {\r\n        r = g = b = l; // achromatic\r\n    } else {\r\n        const hue2rgb = (p: number, q: number, t: number) => {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        };\r\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        const p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    const toHex = (x: number) => {\r\n        const hex = Math.round(x * 255).toString(16);\r\n        return hex.length === 1 ? '0' + hex : hex;\r\n    };\r\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n}\r\n"]}