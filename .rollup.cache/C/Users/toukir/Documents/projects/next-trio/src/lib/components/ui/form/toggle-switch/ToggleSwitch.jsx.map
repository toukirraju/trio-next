{"version":3,"file":"ToggleSwitch.jsx","sourceRoot":"","sources":["ToggleSwitch.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAkB,MAAM,OAAO,CAAC;AAEvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,uCAAuC,CAAC;AAU7E,IAAM,YAAY,GAA0B,UAAC,EAQ5C;IAPC,IAAA,EAAE,QAAA,EACF,OAAO,aAAA,EACP,KAAK,WAAA,EACL,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,iBAAuB,EAAZ,OAAO,mBAAG,EAAE,KAAA,EACpB,KAAK,cAPmC,4DAQ5C,CADS;IAER,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,sDAA+C,OAAO,CAAE,CAAC,CACvE;MAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,wDAAwD,CACpF;QAAA,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB,CACpC;UAAA,CAAC,KAAK,CACJ,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,IAAI,CAAC,UAAU,CACf,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,SAAS,CAAC,CAAC,6CAA6C,CAAC,CACzD,IAAI,KAAK,CAAC,EAEZ;UAAA,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CACpD;QAAA,EAAE,IAAI,CAEN;;QAAA,CAAC,CAAC,QAAQ,CAAC,CAAC;YACV,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;YAC1E,CAAC,CAAC,CACA,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CACnB;cAAA,CAAC,IAAI,CAAC,SAAS,CAAC,4DAA4D,CAC1E;gBAAA,CAAC,KAAK,CACR;cAAA,EAAE,IAAI,CACN;cAAA,CAAC,IAAI,CAAC,SAAS,CAAC,4DAA4D,CAC1E;gBAAA,CAAC,QAAQ,CACX;cAAA,EAAE,IAAI,CACR;YAAA,EAAE,GAAG,CAAC,CACP,CACL;MAAA,EAAE,KAAK,CACT;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,YAAY,CAAC","sourcesContent":["import React, { type FC } from 'react';\nimport type { VariantProps } from 'class-variance-authority';\nimport { toggleSwitchVariants } from '../../variants/toggle-switch-variants';\n\ninterface ToggleSwitchProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'color'>,\n  VariantProps<typeof toggleSwitchVariants> {\n  checked?: boolean;\n  label?: string;\n  sublabel?: string;\n}\n\nconst ToggleSwitch: FC<ToggleSwitchProps> = ({\n  id,\n  checked,\n  label,\n  sublabel,\n  color,\n  className: classes = '',\n  ...props\n}) => {\n  return (\n    <div className={`relative flex items-center gap-2 text-base  ${classes}`}>\n      <label htmlFor={id} className=\"relative inline-flex items-center gap-3 cursor-pointer\">\n        <span className=\"relative inline-flex\">\n          <input\n            id={id}\n            type=\"checkbox\"\n            checked={checked}\n            className={`peer pointer-events-none absolute opacity-0`}\n            {...props}\n          />\n          <i className={toggleSwitchVariants({ color })}></i>\n        </span>\n\n        {!sublabel ?\n          label && <span className=\"font-sans text-sm text-muted-400\">{label}</span>\n          : (\n            <div className=\"ms-1\">\n              <span className=\"block font-sans text-sm text-muted-800 dark:text-muted-100\">\n                {label}\n              </span>\n              <span className=\"block font-sans text-xs text-muted-400 dark:text-muted-400\">\n                {sublabel}\n              </span>\n            </div>\n          )}\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;\n"]}