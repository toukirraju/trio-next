{"version":3,"file":"ColorPalette.js","sourceRoot":"","sources":["ColorPalette.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ReactElement,\r\n  JSXElementConstructor,\r\n  ReactNode,\r\n  ReactPortal,\r\n  Key,\r\n} from \"react\";\r\nimport { MdOutlineFormatColorFill } from \"react-icons/md\";\r\n\r\ntype ColorPaletteProps = {\r\n  variable?: \"primary\" | \"secondary\";\r\n  size?: \"sm\" | \"md\" | \"lg\";\r\n  value?: any;\r\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst ColorPalette = ({\r\n  variable = \"primary\",\r\n  size = \"md\",\r\n  value,\r\n  onChange,\r\n}: ColorPaletteProps) => {\r\n  const colors = [\r\n    { shade: 50, variable: `--${variable}-50` },\r\n    { shade: 100, variable: `--${variable}-100` },\r\n    { shade: 200, variable: `--${variable}-200` },\r\n    { shade: 300, variable: `--${variable}-300` },\r\n    { shade: 400, variable: `--${variable}-400` },\r\n    { shade: 500, variable: `--${variable}-500` },\r\n    { shade: 600, variable: `--${variable}-600` },\r\n    { shade: 700, variable: `--${variable}-700` },\r\n    { shade: 800, variable: `--${variable}-800` },\r\n    { shade: 900, variable: `--${variable}-900` },\r\n  ];\r\n\r\n  let boxSize = 200;\r\n  let chartSize = 200;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      boxSize = 100;\r\n      chartSize = 100;\r\n      break;\r\n    case \"md\":\r\n      boxSize = 150;\r\n      chartSize = 150;\r\n      break;\r\n    case \"lg\":\r\n      boxSize = 200;\r\n      chartSize = 200;\r\n      break;\r\n    default:\r\n      boxSize = 200;\r\n      chartSize = 200;\r\n  }\r\n\r\n  const segmentAngle = 360 / colors.length;\r\n\r\n  const gradientStops = colors\r\n    .map((color, index) => {\r\n      const startAngle = index * segmentAngle;\r\n      const endAngle = (index + 1) * segmentAngle;\r\n      return `var(${color.variable}) ${startAngle}deg ${endAngle}deg`;\r\n    })\r\n    .join(\", \");\r\n\r\n  const createLabels = () => {\r\n    return colors.map((color, index) => {\r\n      // Shift the index by 2 positions\r\n      const shiftedIndex = (index + 8) % colors.length;\r\n      const angle = shiftedIndex * segmentAngle * (Math.PI / 180);\r\n\r\n      const labelRadius = chartSize / 2 - (size === \"sm\" ? 13 : 20);\r\n      const x = Math.cos(angle) * labelRadius + boxSize / 2;\r\n      const y = Math.sin(angle) * labelRadius + boxSize / 2;\r\n\r\n      // Determine label color based on shade\r\n      const labelColorVariable =\r\n        color.shade <= 400 ? `--${variable}-900` : `--${variable}-50`;\r\n\r\n      return (\r\n        <div\r\n          key={color.shade}\r\n          className={`absolute transform -translate-x-1/2 -translate-y-1/2 font-semibold ${size === \"sm\" ? \"text-[8px]\" : size === \"md\" ? \"text-[10px]\" : \"text-xs\"}`}\r\n          style={{\r\n            left: `${x}px`,\r\n            top: `${y}px`,\r\n            color: `var(${labelColorVariable})`,\r\n          }}\r\n        >\r\n          {color.shade}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const createHalfCircularText = (text: string, radius: number) => {\r\n    const characters = text.split(\"\");\r\n    const angleStep = -180 / (characters.length - 1);\r\n\r\n    return characters.map(\r\n      (\r\n        char:\r\n          | string\r\n          | number\r\n          | boolean\r\n          | ReactElement<any, string | JSXElementConstructor<any>>\r\n          | Iterable<ReactNode>\r\n          | ReactPortal\r\n          | null\r\n          | undefined,\r\n        index: Key | null | undefined\r\n      ) => {\r\n        const angle = -180 + angleStep * (index as number); // Start from left and go to right\r\n        const angleInRadians = (angle * Math.PI) / 180;\r\n        const x = radius * Math.cos(angleInRadians);\r\n        const y = radius * Math.sin(angleInRadians);\r\n\r\n        return (\r\n          <span\r\n            key={index}\r\n            className={`absolute transfor ${size === \"sm\" ? \"hidden\" : size === \"md\" ? \"text-[10px]\" : \"text-xs\"}`}\r\n            style={{\r\n              left: `0%`, // Center horizontally\r\n              top: `50%`, // Center vertically\r\n              transform: `translate(-50%, -50%) rotate(${angle}deg) translate(${radius}px) rotate(${-angle}deg)`,\r\n              color: `var(--${variable}-100)`,\r\n            }}\r\n          >\r\n            {char}\r\n          </span>\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"relative\"\r\n      style={{ width: `${boxSize}px`, height: `${boxSize}px` }}\r\n    >\r\n      <div\r\n        className=\"absolute rounded-full\"\r\n        style={{\r\n          width: `${chartSize}px`,\r\n          height: `${chartSize}px`,\r\n          top: `${(boxSize - chartSize) / 2}px`,\r\n          left: `${(boxSize - chartSize) / 2}px`,\r\n          backgroundImage: `conic-gradient(${gradientStops})`,\r\n        }}\r\n      ></div>\r\n      {/* Input container */}\r\n      <label\r\n        className=\"absolute cursor-pointer  group rounded-full flex items-center justify-center\"\r\n        style={{\r\n          width: `${chartSize / 2}px`,\r\n          height: `${chartSize / 2}px`,\r\n          top: `${boxSize / 2 - chartSize / 4}px`,\r\n          left: `${boxSize / 2 - chartSize / 4}px`,\r\n          background: `var(--${variable})`,\r\n        }}\r\n      >\r\n        <input\r\n          type=\"color\"\r\n          className=\"w-full h-full opacity-0 cursor-pointer\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n\r\n        {/* Circular Text */}\r\n        <div className=\"relative w-full h-full\">\r\n          <span\r\n            className={`absolute top-1/2 left-0 -translate-x-1/2 -translate-y-1/2 text-3xl group-hover:text-gray-100 transition-all duration-300`}\r\n          >\r\n            <MdOutlineFormatColorFill />\r\n          </span>\r\n          {createHalfCircularText(variable, chartSize / 4 - 10)}\r\n        </div>\r\n      </label>\r\n      {createLabels()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPalette;\r\n"]}