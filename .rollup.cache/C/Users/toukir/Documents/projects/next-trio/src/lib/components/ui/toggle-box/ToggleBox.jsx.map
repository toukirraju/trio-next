{"version":3,"file":"ToggleBox.jsx","sourceRoot":"","sources":["ToggleBox.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { type FC, useEffect, useRef, useState } from 'react';\nimport Card from '../card/Card';\nimport { ReIcon } from '@/components/ReIcon/ReIcon';\nimport { cn } from '@/utils/cn';\n\ninterface ToggleBoxProps {\n  isToggle?: boolean;\n  open?: boolean;\n  title?: string;\n  shape?: 'straight' | 'rounded' | 'smooth' | 'curved';\n  color?:\n    | 'default'\n    | 'contrast'\n    | 'muted'\n    | 'mutedContrast'\n    | 'primary'\n    | 'info'\n    | 'success'\n    | 'warning'\n    | 'danger';\n  growOnExpand?: boolean;\n  spaced?: 'sm' | 'md' | 'lg' | 'none';\n  header?: React.ReactNode;\n  children: React.ReactNode;\n  classes?: {\n    container?: string;\n    header?: string;\n  };\n}\n\nconst ToggleBox: FC<ToggleBoxProps> = ({\n  header,\n  children,\n  title,\n  shape = 'smooth',\n  color = 'contrast',\n  growOnExpand,\n  spaced,\n  isToggle = false,\n  open = false,\n  classes\n}) => {\n  const [panelOpened, setPanelOpened] = useState(open);\n  const [contentHeight, setContentHeight] = useState('0px');\n  const toggleBoxContentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setPanelOpened(open);\n  }, [open]);\n\n  useEffect(() => {\n    const updateHeight = () => {\n      if (panelOpened && toggleBoxContentRef.current) {\n        setContentHeight(`${toggleBoxContentRef.current.scrollHeight}px`);\n      } else {\n        setContentHeight('0px');\n      }\n    };\n\n    updateHeight();\n\n    // Use ResizeObserver to detect changes in content size\n    const resizeObserver = new ResizeObserver(updateHeight);\n    if (toggleBoxContentRef.current) {\n      resizeObserver.observe(toggleBoxContentRef.current);\n    }\n\n    return () => {\n      if (toggleBoxContentRef.current) {\n        resizeObserver.unobserve(toggleBoxContentRef.current);\n      }\n    };\n  }, [panelOpened, children]);\n\n  return (\n    <Card\n      shape={shape}\n      color={color}\n      shadow={panelOpened ? 'flat' : 'none'}\n      className={cn(\n        ` \n        ${panelOpened && growOnExpand ? 'md:p-6' : ''}\n      `,\n        spaced && spaced === 'none'\n          ? 'p-0'\n          : spaced === 'md'\n            ? 'p-6'\n            : spaced === 'lg'\n              ? 'p-7'\n              : 'p-4',\n        classes && classes?.container,\n        '!bg-muted-100 dark:!bg-muted-900'\n      )}\n    >\n      <div\n        role=\"button\"\n        className={`flex items-center gap-x-2 ${panelOpened ? '' : ''} ${isToggle ? 'cursor-pointer' : ''}`}\n        onClick={() => {\n          setPanelOpened(!panelOpened);\n        }}\n      >\n        {header ? (\n          <div className={cn(classes && classes?.header)}>{header}</div>\n        ) : (\n          <div>\n            <h5 className=\"font-sans text-sm font-medium text-muted-800 dark:text-muted-100\">\n              {title}\n            </h5>\n          </div>\n        )}\n        <div\n          className={`pointer-events-none transition-all duration-300 ${\n            panelOpened ? 'rotate-90' : ' hover:rotate-90'\n          } ${\n            isToggle\n              ? 'flex h-8 w-8 items-center justify-center rounded-full text-muted-400 hover:bg-muted-100 dark:hover:bg-muted-800 [&>svg]:h-4'\n              : ''\n          }`}\n        >\n          <ReIcon iconName=\"BiChevronRight\" className=\"text-muted-400 text-2xl\" />\n        </div>\n      </div>\n      <div\n        ref={toggleBoxContentRef}\n        style={{\n          maxHeight: contentHeight,\n          transition: 'max-height 0.3s ease-in-out'\n        }}\n        className={`bg-muted-100 dark:bg-muted-900 grid grid-cols-1 gap-3 overflow-hidden ${\n          panelOpened ? 'mt-3' : 'mt-0'\n        }`}\n      >\n        {children}\n      </div>\n    </Card>\n  );\n};\n\nexport default ToggleBox;\n"]}