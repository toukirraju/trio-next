{"version":3,"file":"InputFile.jsx","sourceRoot":"","sources":["InputFile.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { ReIcon } from '@/components/ReIcon/ReIcon';\nimport Progress from '../../progress/Progress';\nimport { useDropzone } from 'react-dropzone';\nimport IconBox from '../../iconbox/IconBox';\nimport Button from '../../button/Button';\n\n// Define the props interface for the InputFile component\nexport interface InputFileProps {\n  id: string;\n  url: string;\n  acceptedFileTypes?: string[];\n  maxFileSize?: number;\n  allowMultiple?: boolean;\n  label?: string;\n  labelAlt?: string;\n  shape?: 'straight' | 'rounded' | 'smooth' | 'curved' | 'full';\n  color?:\n    | 'default'\n    | 'contrast'\n    | 'muted'\n    | 'mutedContrast'\n    | 'primary'\n    | 'info'\n    | 'success'\n    | 'warning'\n    | 'danger'\n    | 'none';\n  bordered?: boolean;\n  spaced?: boolean;\n  responses?: any;\n  setResponses?: any;\n}\n\n// Define the interface for file status\nexport interface FileStatus {\n  name: string;\n  progress: number;\n  status: 'uploading' | 'success' | 'error';\n  message?: string;\n}\n\nexport default function InputFile(props: InputFileProps) {\n  // Destructure props with default values\n  const {\n    id,\n    url,\n    acceptedFileTypes,\n    maxFileSize = 5,\n    allowMultiple = false,\n    label = '',\n    labelAlt = '',\n    shape = 'smooth',\n    color = 'contrast',\n    bordered = false,\n    spaced = true,\n    responses,\n    setResponses\n  } = props;\n\n  const [files, setFiles] = useState<FileStatus[]>([]);\n  const [uploadComplete, setUploadComplete] = useState(false);\n  const [oversizedFiles, setOversizedFiles] = useState<string[]>([]);\n\n  // Callback function to handle file drop\n  const onDrop = useCallback((acceptedFiles: File[], rejectedFiles: any[]) => {\n    const newFiles = acceptedFiles.map((file) => ({\n      name: file.name,\n      progress: 0,\n      status: 'uploading' as const\n    }));\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n    acceptedFiles.forEach(uploadFile);\n\n    // Handle oversized files\n    const oversized = rejectedFiles\n      .filter((file) => file.errors[0]?.code === 'file-too-large')\n      .map((file) => file.file.name);\n    setOversizedFiles(oversized);\n  }, []);\n\n  // Configure dropzone\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: acceptedFileTypes\n      ? acceptedFileTypes.reduce((acc, type) => ({ ...acc, [type]: [] }), {})\n      : undefined,\n    maxSize: maxFileSize * 1024 * 1024,\n    multiple: allowMultiple,\n    onDropRejected: (rejectedFiles) => {\n      const oversized = rejectedFiles\n        .filter((file) => file.errors[0]?.code === 'file-too-large')\n        .map((file) => file.file.name);\n      setOversizedFiles(oversized);\n    }\n  });\n\n  // Function to handle file upload\n  const uploadFile = async (file: File) => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) throw new Error('Upload failed. Please try again.');\n      const responseData = await response.json();\n\n      setFiles((prevFiles) =>\n        prevFiles.map((f) =>\n          f.name === file.name\n            ? { ...f, progress: 100, status: 'success', response: responseData }\n            : f\n        )\n      );\n\n      setResponses((prevResponses: any) => [...prevResponses, responseData]); // Add the response to the responses state\n\n      if (files.every((f) => f.status === 'success')) {\n        setUploadComplete(true);\n      }\n    } catch (error) {\n      setFiles((prevFiles) =>\n        prevFiles.map((f) =>\n          f.name === file.name\n            ? { ...f, status: 'error', message: 'Upload failed. Please try again.' }\n            : f\n        )\n      );\n    }\n  };\n\n  // Function to reset the uploader state\n  const resetUploader = () => {\n    setFiles([]);\n    setUploadComplete(false);\n    setResponses([]);\n    setOversizedFiles([]);\n  };\n\n  // Updated the uploader state\n  useEffect(() => {\n    setResponses(files);\n  }, [files]);\n\n  console.log('response-------------', responses, files);\n\n  return (\n    <div\n      className={`flex w-full flex-col gap-4\n      ${bordered && color === 'default' ? 'border border-muted-200 dark:border-muted-700' : ''}\n      ${bordered && color === 'contrast' ? 'border border-muted-200 dark:border-muted-800' : ''}\n      ${bordered && color === 'muted' ? 'border border-muted-200 dark:border-muted-700' : ''}\n      ${bordered && color === 'mutedContrast' ? 'border border-muted-200 dark:border-muted-800' : ''}\n      ${shape === 'rounded' ? 'rounded-md' : ''}\n      ${shape === 'smooth' ? 'rounded-lg' : ''}\n      ${shape === 'curved' ? 'rounded-xl' : ''}\n      ${shape === 'full' ? 'rounded-xl' : ''}\n      ${color === 'default' ? 'bg-white dark:bg-muted-800' : ''}\n      ${color === 'contrast' ? 'bg-white dark:bg-muted-950' : ''}\n      ${color === 'muted' ? 'bg-muted-100 dark:bg-muted-800' : ''}\n      ${color === 'mutedContrast' ? 'bg-muted-100 dark:bg-muted-950' : ''}\n    `}\n    >\n      <div className=\"w-full\">\n        <label className={`block pb-3 pt-6 ${spaced ? 'px-6' : ''}`}>\n          <span className=\"block text-sm text-muted-500 dark:text-muted-400\">{label}</span>\n          <span className=\"block text-xs text-muted-500 dark:text-muted-400\">{labelAlt}</span>\n        </label>\n\n        <div className={`group ${spaced ? 'px-6' : ''}`}>\n          <div\n            {...getRootProps()}\n            className={`relative border-2 border-dashed border-muted-300 bg-muted-50 p-5 dark:border-muted-700 dark:bg-muted-800\n            ${shape === 'rounded' ? 'rounded-md' : ''}\n            ${shape === 'smooth' ? 'rounded-lg' : ''}\n            ${shape === 'curved' ? 'rounded-xl' : ''}\n            ${shape === 'full' ? 'rounded-xl' : ''}\n          `}\n          >\n            <input {...getInputProps()} />\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"32\"\n              height=\"32\"\n              viewBox=\"0 0 24 24\"\n              className=\"mx-auto mb-4 h-14 w-14 text-muted-400 transition-colors duration-300 group-hover:text-primary-500\"\n            >\n              <g fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\">\n                <path d=\"M2 14.5A4.5 4.5 0 0 0 6.5 19h12a3.5 3.5 0 0 0 .5-6.965a7 7 0 0 0-13.76-1.857A4.502 4.502 0 0 0 2 14.5Z\" />\n                <path strokeLinecap=\"round\" d=\"m14 11l-2-2m0 0l-2 2m2-2v6\" />\n              </g>\n            </svg>\n            <div className=\"mx-auto flex max-w-xs flex-col text-center\">\n              <p className=\"text-sm text-muted-500 dark:text-muted-400\">\n                {isDragActive\n                  ? 'Drop the files here ...'\n                  : \"Drag 'n' drop some files here, or click to select files\"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={`flex flex-col-reverse gap-2 overflow-x-auto mb-4 ${spaced ? 'px-6' : ''}`}>\n        {oversizedFiles.length > 0 && (\n          <div className=\"text-xs text-error-500 mb-2\">\n            The following file(s) exceed the maximum size of {maxFileSize}MB:\n            <ul className=\"list-disc list-inside\">\n              {oversizedFiles.map((file) => (\n                <li key={file}>{file}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {files.map((file) => (\n          <div key={file.name} className=\"flex flex-col gap-1 text-xs\">\n            <p className=\"text-muted-500 dark:text-muted-400\">{file.name}</p>\n            <div\n              className={`flex h-6 items-center gap-2 rounded-full border border-muted-200 dark:border-muted-700 pl-2  py-3 overflow-hidden ${file.status !== 'success' && 'pr-2'} ${file.status !== 'success' && 'pr-4'}`}\n            >\n              {file.status === 'success' && (\n                <div className=\"mr-2\">\n                  <ReIcon iconName=\"AiFillCheckCircle\" className=\"-me-3 h-4 w-4 text-success-500\" />\n                </div>\n              )}\n              <Progress size=\"xs\" value={file.progress} />\n              {file.status === 'success' && (\n                <div className=\"flex gap-2 pr-2\">\n                  <button>\n                    <ReIcon iconName=\"CgEye\" className=\"h-4 w-4 text-primary-500\" />\n                  </button>\n                  <button\n                    onClick={() => {\n                      setFiles((prevFiles: any) =>\n                        prevFiles.filter((f: any) => f.name !== file.name)\n                      );\n                    }}\n                  >\n                    <ReIcon iconName=\"AiOutlineClose\" className=\"h-4 w-4 text-error-500\" />\n                  </button>\n                </div>\n              )}\n              {file.status === 'error' && (\n                <ReIcon\n                  iconName=\"AiOutlinePlusCircle\"\n                  className=\"-me-3 h-5 w-5 rotate-45 text-error-500\"\n                />\n              )}\n            </div>\n            {file.status === 'error' && (\n              <p className=\"font-normal text-xs text-error-500 mb-2\">{file.message}</p>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {uploadComplete && (\n        <div className={`flex flex-col gap-2 py-3 ${spaced ? 'px-6' : ''}`}>\n          <div className=\"mt-3 w-full text-center\">\n            <IconBox\n              icon=\"AiOutlineCheckCircle\"\n              variant=\"pastel\"\n              color=\"success\"\n              className=\"mx-auto mb-2\"\n            />\n            <h3 className=\"mb-1 text-base font-light text-muted-800 dark:text-muted-100\">\n              Upload Complete\n            </h3>\n            <p className=\"mx-auto max-w-[320px] text-sm text-muted-500 dark:text-muted-400\">\n              Great, your file{allowMultiple ? 's were' : ' was'} successfully uploaded.\n            </p>\n          </div>\n        </div>\n      )}\n\n      {(uploadComplete || files.length > 0 || oversizedFiles.length > 0) && (\n        <div className={`pb-6 ${spaced ? 'px-6' : ''}`}>\n          <Button\n            shape={shape}\n            color=\"muted\"\n            type=\"button\"\n            className=\"w-full\"\n            onClick={resetUploader}\n          >\n            Upload Again\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\n// 'use client';\n// import React, { useState, type ChangeEvent, useRef } from 'react';\n// import Button from '../../button/Button';\n// import { ReIcon } from '@/components/ReIcon/ReIcon';\n// import IconBox from '../../iconbox/IconBox';\n// import Progress from '../../progress/Progress';\n\n// export interface InputFileProps {\n//   id: string;\n//   acceptedFileTypes?: string[] | null;\n//   url: string;\n//   maxFileSize?: number;\n//   allowMultiple?: boolean;\n//   label?: string;\n//   labelAlt?: string;\n//   shape?: 'straight' | 'rounded' | 'smooth' | 'curved' | 'full';\n//   color?:\n//     | 'default'\n//     | 'contrast'\n//     | 'muted'\n//     | 'mutedContrast'\n//     | 'primary'\n//     | 'info'\n//     | 'success'\n//     | 'warning'\n//     | 'danger'\n//     | 'none';\n//   bordered?: boolean;\n//   spaced?: boolean;\n// }\n\n// export default function InputFile(props: InputFileProps) {\n//   const {\n//     id,\n//     acceptedFileTypes,\n//     url,\n//     maxFileSize = 5,\n//     allowMultiple = false,\n//     label = '',\n//     labelAlt = '',\n//     shape = 'smooth',\n//     color = 'contrast',\n//     bordered = false,\n//     spaced = true\n//   } = props;\n\n//   const MAX_FILE_BYTES = maxFileSize * 1024 * 1024; // MB to bytes\n\n//   // Change the state structure to handle multiple file progress and status\n//   const [fileProgress, setFileProgress] = useState<{ [key: string]: number }>({});\n//   const [fileStatus, setFileStatus] = useState<{ [key: string]: string }>({});\n//   const [uploadError, setUploadError] = useState<string | null>(null);\n//   const [uploadSuccess, setUploadSuccess] = useState<boolean>(false);\n//   const [uploadWarning, setUploadWarning] = useState<boolean>(false);\n\n//   const isError = Object.values(fileStatus).some((status) => status !== 'Uploaded');\n\n//   // Create a ref for the file input\n//   const fileInputRef = useRef<HTMLInputElement>(null);\n\n//   const resetUploader = () => {\n//     setFileProgress({});\n//     setFileStatus({});\n//     setUploadError(null);\n//     setUploadSuccess(false);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   const fileSelectedHandler = (event: ChangeEvent<HTMLInputElement>) => {\n//     setUploadError(null); // reset the upload error when a new file is selected\n//     if (event.target.files) {\n//       const files = Array.from(event.target.files);\n//       let isValid = true; // Flag to check if all files are valid\n//       let fileErrors: { [key: string]: string } = {};\n\n//       for (const file of files) {\n//         if (file.size > MAX_FILE_BYTES) {\n//           fileErrors[file.name] = `File size cannot exceed ${maxFileSize} MB`;\n//           isValid = false;\n//         }\n//         if (acceptedFileTypes && !acceptedFileTypes.includes(file.type)) {\n//           fileErrors[file.name] =\n//             'File type not accepted. Accepted types: ' + acceptedFileTypes.join(', ');\n//           isValid = false;\n//         }\n//       }\n\n//       if (!isValid) {\n//         setFileStatus(fileErrors);\n//       } else {\n//         files.forEach((file) => {\n//           setFileProgress((prev) => ({ ...prev, [file.name]: 0 }));\n//           fileUploadHandler(file);\n//         });\n//       }\n//     }\n//   };\n\n//   const fileUploadHandler = (file: File) => {\n//     const formData = new FormData();\n//     formData.append('uploads', file);\n\n//     const xhr = new XMLHttpRequest();\n//     xhr.open('POST', url, true);\n\n//     xhr.upload.addEventListener('progress', (event) => {\n//       if (event.lengthComputable) {\n//         const progress = Math.round((event.loaded / event.total) * 100);\n//         setFileProgress((prev) => ({ ...prev, [file.name]: progress }));\n//       }\n//     });\n\n//     xhr.addEventListener('readystatechange', () => {\n//       if (xhr.readyState === 4) {\n//         if (xhr.status === 200) {\n//           setFileStatus((prev) => ({ ...prev, [file.name]: 'Uploaded' }));\n//           setUploadSuccess(true);\n//         } else {\n//           setFileStatus((prev) => ({\n//             ...prev,\n//             [file.name]: 'Error while uploading the file. Server response: ' + xhr.statusText\n//           }));\n//         }\n//       }\n//     });\n\n//     xhr.send(formData);\n//   };\n\n//   return (\n//     <div\n//       className={`flex w-full flex-col gap-4\n//       ${bordered && color === 'default' ? 'border border-muted-200 dark:border-muted-700' : ''}\n//       ${bordered && color === 'contrast' ? 'border border-muted-200 dark:border-muted-800' : ''}\n//       ${bordered && color === 'muted' ? 'border border-muted-200 dark:border-muted-700' : ''}\n//       ${bordered && color === 'mutedContrast' ? 'border border-muted-200 dark:border-muted-800' : ''}\n//       ${shape === 'rounded' ? 'rounded-md' : ''}\n//       ${shape === 'smooth' ? 'rounded-lg' : ''}\n//       ${shape === 'curved' ? 'rounded-xl' : ''}\n//       ${shape === 'full' ? 'rounded-xl' : ''}\n//       ${color === 'default' ? 'bg-white dark:bg-muted-800' : ''}\n//       ${color === 'contrast' ? 'bg-white dark:bg-muted-950' : ''}\n//       ${color === 'muted' ? 'bg-muted-100 dark:bg-muted-800' : ''}\n//       ${color === 'mutedContrast' ? 'bg-muted-100 dark:bg-muted-950' : ''}\n//     `}\n//     >\n//       {uploadSuccess ? (\n//         <div\n//           className={`flex flex-col gap-2 py-3\n//           ${spaced ? 'px-6' : ''}\n//         `}\n//         >\n//           {isError ? (\n//             <div className=\"mt-3 w-full text-center [&+div]:hidden\">\n//               <IconBox\n//                 icon=\"AiOutlinePlusCircle\"\n//                 variant=\"pastel\"\n//                 color=\"danger\"\n//                 className=\"mx-auto mb-2 rotate-45\"\n//               />\n//               <h3 className=\"mb-1 text-base font-light text-muted-800 dark:text-muted-100\">\n//                 Upload error\n//               </h3>\n//               <p className=\"mx-auto max-w-[320px] text-sm text-muted-500 dark:text-muted-400\">\n//                 Sorry, there was a problem uploading your file(s).\n//               </p>\n//             </div>\n//           ) : (\n//             <></>\n//           )}\n//           <div className=\"mt-3 w-full text-center\">\n//             <IconBox\n//               icon=\"AiOutlineCheckCircle\"\n//               variant=\"pastel\"\n//               color=\"success\"\n//               className=\"mx-auto mb-2\"\n//             />\n//             <h3 className=\"mb-1 text-base font-light text-muted-800 dark:text-muted-100\">\n//               Upload Complete\n//             </h3>\n//             <p className=\"mx-auto max-w-[320px] text-sm text-muted-500 dark:text-muted-400\">\n//               Great, your file(s) were successfully uploaded.\n//             </p>\n//           </div>\n//         </div>\n//       ) : (\n//         <div className=\"w-full\">\n//           <label\n//             className={`block pb-3 pt-6\n//             ${spaced ? 'px-6' : ''}\n//           `}\n//           >\n//             <span className=\"block text-sm text-muted-500 dark:text-muted-400\">{label}</span>\n//             <span className=\"block text-xs text-muted-500 dark:text-muted-400\">{labelAlt}</span>\n//           </label>\n\n//           {!isError ? (\n//             <div\n//               className={`group\n//               ${spaced ? 'px-6' : ''}\n//             `}\n//             >\n//               <div\n//                 className={`relative border-2 border-dashed border-muted-300 bg-muted-50 p-5 dark:border-muted-700 dark:bg-muted-800\n//                 ${shape === 'rounded' ? 'rounded-md' : ''}\n//                 ${shape === 'smooth' ? 'rounded-lg' : ''}\n//                 ${shape === 'curved' ? 'rounded-xl' : ''}\n//                 ${shape === 'full' ? 'rounded-xl' : ''}\n//             `}\n//               >\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   width=\"32\"\n//                   height=\"32\"\n//                   viewBox=\"0 0 24 24\"\n//                   className=\"mx-auto mb-4 h-14 w-14 text-muted-400 transition-colors duration-300 group-hover:text-primary-500\"\n//                 >\n//                   <g fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\">\n//                     <path d=\"M2 14.5A4.5 4.5 0 0 0 6.5 19h12a3.5 3.5 0 0 0 .5-6.965a7 7 0 0 0-13.76-1.857A4.502 4.502 0 0 0 2 14.5Z\" />\n//                     <path strokeLinecap=\"round\" d=\"m14 11l-2-2m0 0l-2 2m2-2v6\" />\n//                   </g>\n//                 </svg>\n//                 <div className=\"mx-auto flex max-w-xs flex-col text-center\">\n//                   <label>\n//                     <input\n//                       id={id}\n//                       type=\"file\"\n//                       className=\"hidden w-36 cursor-pointer text-sm\"\n//                       onChange={fileSelectedHandler}\n//                       accept={acceptedFileTypes ? acceptedFileTypes.join(',') : undefined}\n//                       ref={fileInputRef}\n//                       multiple={allowMultiple} // Added the 'multiple' attribute conditionally\n//                     />\n//                     <label\n//                       htmlFor={id}\n//                       className={`mx-auto flex w-40 cursor-pointer items-center justify-center bg-primary-500 px-3 py-2 text-sm text-center font-normal text-white transition-colors duration-300 hover:bg-primary-400 active:bg-primary-500\n//                       ${shape === 'rounded' ? 'rounded-md' : ''}\n//                       ${shape === 'smooth' ? 'rounded-lg' : ''}\n//                       ${shape === 'curved' ? 'rounded-xl' : ''}\n//                       ${shape === 'full' ? 'rounded-full' : ''}\n//                     `}\n//                     >\n//                       Select File{allowMultiple ? 's' : ''}\n//                     </label>\n//                   </label>\n\n//                   <div className=\"mt-3 text-xs uppercase text-muted-500 dark:text-muted-400\">\n//                     or drop {allowMultiple ? '' : 'a'} file{allowMultiple ? 's' : ''} here\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           ) : (\n//             ''\n//           )}\n\n//           <label className=\"block\">\n//             <span className=\"text-sm font-medium text-danger-500\">{uploadError}</span>\n//           </label>\n//         </div>\n//       )}\n\n//       <div\n//         className={`flex flex-col-reverse gap-2 overflow-x-auto\n//         ${spaced ? 'px-6' : ''}\n//       `}\n//       >\n//         {Object.entries(fileProgress).map(([fileName, progress]) => (\n//           <div key={fileName} className=\"flex flex-col gap-1 text-xs\">\n//             <p className=\"text-muted-500 dark:text-muted-400\">{fileName}</p>\n//             <div className=\"flex h-6 items-center gap-2 rounded-full border border-muted-200 dark:border-muted-700 px-3  overflow-hidden\">\n//               <Progress size=\"xs\" value={progress} />\n//               {progress === 100 ? (\n//                 <>\n//                   {fileStatus[fileName] === 'Uploaded' ? (\n//                     <ReIcon\n//                       iconName=\"AiOutlineCheckCircle\"\n//                       className=\"-me-3 h-6 w-6 text-success-500\"\n//                     />\n//                   ) : (\n//                     <ReIcon\n//                       iconName=\"AiOutlinePlusCircle\"\n//                       className=\"-me-3 h-6 w-6 rotate-45 text-danger-500\"\n//                     />\n//                   )}\n//                 </>\n//               ) : (\n//                 ''\n//               )}\n//             </div>\n//             <p className=\"font-normal text-xs text-danger-500 mb-2\">\n//               {fileStatus[fileName] !== 'Uploaded' ? fileStatus[fileName] : ''}\n//             </p>\n//           </div>\n//         ))}\n//       </div>\n//       <div>\n//         {uploadSuccess || isError ? (\n//           <div\n//             className={`pb-6\n//             ${spaced ? 'px-6' : ''}\n//           `}\n//           >\n//             <Button\n//               shape={shape}\n//               color=\"muted\"\n//               type=\"button\"\n//               className=\"w-full\"\n//               onClick={resetUploader}\n//             >\n//               Upload Again\n//             </Button>\n//           </div>\n//         ) : (\n//           ''\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n"]}