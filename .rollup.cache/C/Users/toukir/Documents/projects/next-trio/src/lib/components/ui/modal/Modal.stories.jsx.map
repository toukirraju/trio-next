{"version":3,"file":"Modal.stories.jsx","sourceRoot":"","sources":["Modal.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Meta, Story } from '@storybook/react';\nimport Modal from './Modal';\n\n// Meta configuration for Storybook\nconst meta: Meta<typeof Modal> = {\n  title: 'UI/Modal',\n  component: Modal,\n  tags: ['autodocs'],\n  argTypes: {\n    open: { control: 'boolean' },\n    size: {\n      control: { type: 'radio', options: ['sm', 'md', 'lg', 'xl', '2xl', '3xl'] }\n    },\n    classes: { control: 'object' },\n    children: { control: 'text' },\n    isClose: { control: 'boolean' },\n    onBackdropClick: { action: 'onBackdropClick' }\n  }\n};\n\nexport default meta;\n\n// Template for stories\nconst Template: Story<React.ComponentProps<typeof Modal>> = (args) => {\n  const [isOpen, setIsOpen] = React.useState(args.open);\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n    if (args.setOpen) args.setOpen();\n  };\n\n  return (\n    <>\n      <button onClick={toggleModal} className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n        Open Modal\n      </button>\n      <Modal {...args} open={isOpen} setOpen={toggleModal}>\n        <div className=\"p-4 bg-white dark:bg-gray-800 rounded-lg\">\n          <h2 className=\"text-lg font-bold\">Modal Title</h2>\n          <p className=\"mt-2\">This is the modal content.</p>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\n// Default story\nexport const Default = Template.bind({});\nDefault.args = {\n  open: false,\n  size: 'md',\n  isClose: true\n};\n\n// Custom Size story\nexport const CustomSize: Story<React.ComponentProps<typeof Modal>> = (args) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <button onClick={toggleModal} className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n        Open Large Modal\n      </button>\n      <Modal {...args} open={isOpen} setOpen={toggleModal}>\n        <div className=\"p-4 bg-white dark:bg-gray-800 rounded-lg\">\n          <h2 className=\"text-lg font-bold\">Large Modal Title</h2>\n          <p className=\"mt-2\">This is the large modal content.</p>\n        </div>\n      </Modal>\n    </>\n  );\n};\nCustomSize.args = {\n  open: false,\n  size: 'lg',\n  isClose: true\n};\n\n// Without Close Button story\nexport const WithoutCloseButton = Template.bind({});\nWithoutCloseButton.args = {\n  open: false,\n  size: 'md',\n  isClose: false\n};\n\n// Custom Styling\nexport const CustomStyling = Template.bind({});\nCustomStyling.args = {\n  open: false,\n  size: 'md',\n  isClose: true,\n  classes: {\n    wrapper: 'bg-red-500 p-8',\n    backdrop: 'bg-opacity-50',\n    dialog: 'rounded-lg shadow-lg'\n  }\n};\n"]}