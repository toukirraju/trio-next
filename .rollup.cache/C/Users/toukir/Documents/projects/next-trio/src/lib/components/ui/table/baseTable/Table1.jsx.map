{"version":3,"file":"Table1.jsx","sourceRoot":"","sources":["Table1.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\nimport { HTMLProps, useEffect, useState } from 'react';\n// import style from './style.module.css';\nimport TableBody from './TableBody1';\nimport TableHeader from './TableHeader1';\nimport handleAllDataSelectedRecord from './utils/table';\nimport TableFooter from './TableFooter';\nimport { cn } from '@/utils/cn';\nconst style = {};\ntype DyTableProps = {\n  columns?: any[];\n  records?: any[];\n  title?: string;\n  wrapperClasses?: string;\n  captionClasses?: string;\n  tableBodyClasses?: string;\n  selectBoxWrapperClass?: string;\n  // stripedColor?: string;\n  // stripedHoverColor?: string;\n  striped?: boolean;\n  border?: boolean;\n  onSelectedRecords?: (records: any[]) => void;\n  showSelectBox?: boolean;\n  headerShow?: boolean;\n  // paginationValue?: any;\n  // isPagination?: boolean;\n  rowClasses?: (data: any) => string;\n  headerClasses?: string;\n  // tableBodyStyle?: React.CSSProperties;\n  cellClasses?: (data: any, value: any) => string;\n  // footerClasses?: string;\n  // footerData?: any;\n};\n\nconst DyTable = ({\n  columns = [],\n  records = [],\n  title,\n  wrapperClasses,\n  captionClasses,\n  tableBodyClasses,\n  headerClasses,\n  rowClasses,\n  cellClasses,\n  selectBoxWrapperClass,\n  stripedColor,\n  stripedHoverColor,\n  striped = false,\n  border = false,\n  onSelectedRecords,\n  showSelectBox = false,\n  headerShow = true\n  // paginationValue,\n  // isPagination = true,\n\n  // footerClasses,\n  // footerData\n}: DyTableProps) => {\n  const [tableData, setTableData] = useState<any[]>(records || []);\n  //  all selected table area here\n  const [toggleProduct, setToggleProduct] = useState([]);\n  // select box function code here for all data\n  const handleAllDataSelectedRecords = (e: any) => {\n    handleAllDataSelectedRecord(e, toggleProduct, setToggleProduct, records);\n  };\n  useEffect(() => {\n    onSelectedRecords && onSelectedRecords(toggleProduct);\n  }, [toggleProduct, onSelectedRecords]);\n\n  const getSortedData = (data: any[]) => {\n    setTableData(data);\n  };\n\n  return (\n    <div className={style.table_area}>\n      <div\n        className={cn('w-auto overflow-x-auto custom__scrollbar', wrapperClasses && wrapperClasses)}\n      >\n        <table\n          className={cn(\n            // style.table__container,\n            'w-full',\n            border && style.border,\n            striped && style.table__striped,\n            tableBodyClasses && tableBodyClasses\n          )}\n          // style={tableBodyStyle && tableBodyStyle}\n        >\n          {title && (\n            <caption className={cn(captionClasses ? captionClasses : style.caption)}>\n              {' '}\n              {title}\n            </caption>\n          )}\n          {/* table header and body */}\n\n          {headerShow && (\n            <TableHeader\n              columns={columns}\n              records={tableData}\n              handleAllDataSelectedRecords={handleAllDataSelectedRecords}\n              toggleProduct={toggleProduct}\n              showSelectBox={showSelectBox}\n              getSortingData={getSortedData}\n              headerClasses={headerClasses}\n              selectBoxWrapperClass={selectBoxWrapperClass}\n            />\n          )}\n\n          <TableBody\n            columns={columns}\n            records={tableData}\n            stripedColor={stripedColor && stripedColor}\n            stripedHoverColor={stripedHoverColor && stripedHoverColor}\n            striped={striped}\n            handleAllDataSelectedRecords={handleAllDataSelectedRecords}\n            toggleProduct={toggleProduct}\n            showSelectBox={showSelectBox ? true : headerShow ? showSelectBox : false}\n            rowClasses={rowClasses && rowClasses}\n            cellClasses={cellClasses && cellClasses}\n            selectBoxWrapperClass={selectBoxWrapperClass}\n          />\n\n          {/* {footerData && (\n            <TableFooter footerData={footerData} footerClasses={footerClasses && footerClasses} />\n          )} */}\n        </table>\n      </div>\n      {/* {isPagination && paginationValue} */}\n    </div>\n  );\n};\n\nexport default DyTable;\n"]}