{"version":3,"file":"IconBox.jsx","sourceRoot":"","sources":["IconBox.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAkB,MAAM,OAAO,CAAC;AAEvC,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAC;AAUpD,IAAM,OAAO,GAAqB,UAAC,EAWlC;IAVC,IAAA,OAAO,aAAA,EACP,aAAiB,EAAjB,KAAK,mBAAG,SAAS,KAAA,EACjB,IAAI,UAAA,EACJ,aAAc,EAAd,KAAK,mBAAG,MAAM,KAAA,EACd,YAAW,EAAX,IAAI,mBAAG,IAAI,KAAA,EACX,IAAI,UAAA,EACJ,MAAM,YAAA,EACN,iBAAuB,EAAZ,OAAO,mBAAG,EAAE,KAAA,EACvB,mBAAgB,EAAhB,WAAW,mBAAG,EAAE,KAAA,EACb,KAAK,cAVyB,2FAWlC,CADS;IAER,OAAO,CACL,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,eAAe,CAAC;YACzB,OAAO,SAAA;YACP,KAAK,OAAA;YACL,KAAK,OAAA;YACL,IAAI,MAAA;YACJ,MAAM,QAAA;YACN,SAAS,EAAE,6DAAsD,OAAO,wBACtE,KAAK,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,wBACvF,KAAK,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,wBAC3F,KAAK,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,wBACzF,KAAK,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,wBAEzF,KAAK,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,SAAS;gBAClE,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CACN;SACH,CAAC,CAAC,CACH,IAAI,KAAK,CAAC,CAEV;MAAA,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,UAAG,WAAW,CAAE,CAAC,EACtD;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import React, { type FC } from 'react';\nimport type { VariantProps } from 'class-variance-authority';\nimport { iconboxVariants } from '../variants/iconbox-variants';\nimport { ReIcon } from '@/components/ReIcon/ReIcon';\n\ninterface IconBoxProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'color'>,\n    VariantProps<typeof iconboxVariants> {\n  icon: string;\n  iconClasses?: string;\n  mask?: 'hex' | 'hexed' | 'blob' | 'deca' | 'diamond';\n}\n\nconst IconBox: FC<IconBoxProps> = ({\n  variant,\n  color = 'default',\n  icon,\n  shape = 'full',\n  size = 'md',\n  mask,\n  shadow,\n  className: classes = '',\n  iconClasses = '',\n  ...props\n}) => {\n  return (\n    <div\n      className={iconboxVariants({\n        variant,\n        color,\n        shape,\n        size,\n        shadow,\n        className: `relative flex items-center justify-center shrink-0 ${classes} \n        ${shape === 'straight' && variant !== 'outlined' && mask === 'hex' ? 'mask mask-hex' : ''} \n        ${shape === 'straight' && variant !== 'outlined' && mask === 'hexed' ? 'mask mask-hexed' : ''} \n        ${shape === 'straight' && variant !== 'outlined' && mask === 'blob' ? 'mask mask-blob' : ''} \n        ${shape === 'straight' && variant !== 'outlined' && mask === 'deca' ? 'mask mask-deca' : ''} \n        ${\n          shape === 'straight' && variant !== 'outlined' && mask === 'diamond'\n            ? 'mask mask-diamond'\n            : ''\n        }`\n      })}\n      {...props}\n    >\n      <ReIcon iconName={icon} className={`${iconClasses}`} />\n    </div>\n  );\n};\n\nexport default IconBox;\n"]}