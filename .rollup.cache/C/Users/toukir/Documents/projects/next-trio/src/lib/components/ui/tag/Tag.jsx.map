{"version":3,"file":"Tag.jsx","sourceRoot":"","sources":["Tag.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAkB,MAAM,OAAO,CAAC;AAEvC,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAQvD,IAAM,GAAG,GAAiB,UAAC,EAQ1B;IAPC,IAAA,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,KAAK,WAAA,EACL,KAAK,WAAA,EACL,MAAM,YAAA,EACN,iBAAuB,EAAZ,OAAO,mBAAG,EAAE,KAAA,EACpB,KAAK,cAPiB,gEAQ1B,CADS;IAER,OAAO,CACL,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,WAAW,CAAC;YACrB,KAAK,OAAA;YACL,OAAO,SAAA;YACP,KAAK,OAAA;YACL,MAAM,QAAA;YACN,SAAS,EAAE,UAAG,OAAO,CAAE;SACxB,CAAC,CAAC,CACH,IAAI,KAAK,CAAC,CAEV;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,GAAG,CAAC","sourcesContent":["import React, { type FC } from 'react';\nimport type { VariantProps } from 'class-variance-authority';\nimport { tagVariants } from '../variants/tag-variants';\n\ninterface TagProps\n  extends Omit<React.HTMLAttributes<HTMLSpanElement>, 'color'>,\n    VariantProps<typeof tagVariants> {\n  children: React.ReactNode;\n}\n\nconst Tag: FC<TagProps> = ({\n  children,\n  variant,\n  color,\n  shape,\n  shadow,\n  className: classes = '',\n  ...props\n}) => {\n  return (\n    <span\n      className={tagVariants({\n        shape,\n        variant,\n        color,\n        shadow,\n        className: `${classes}`\n      })}\n      {...props}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport default Tag;\n"]}