{"version":3,"file":"CheckboxHeadless.jsx","sourceRoot":"","sources":["CheckboxHeadless.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAkB,MAAM,OAAO,CAAC;AASvC,IAAM,gBAAgB,GAA8B,UAAC,EAMpD;IALC,IAAA,EAAE,QAAA,EACF,OAAO,aAAA,EACP,KAAK,WAAA,EACL,QAAQ,cAAA,EACL,KAAK,cAL2C,sCAMpD,CADS;IAER,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,kCAAkC,CAC/C;MAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CACP,CAAC,KAAK,CAAC,SAAS,CAAC,+EAA+E,CAC9F;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,KAAK,CAAC,CACT,CAAC,CAAC,CAAC,CACF,EAAE,CACH,CACD;MAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAC5C;QAAA,CAAC,KAAK,CACJ,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,SAAS,CAAC,mEAAmE,CAC7E,IAAI,CAAC,UAAU,CACf,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,IAAI,KAAK,CAAC,EAEZ;QAAA,CAAC,QAAQ,CACX;MAAA,EAAE,KAAK,CACT;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,gBAAgB,CAAC","sourcesContent":["import React, { type FC } from \"react\";\n\ninterface CheckboxHeadlessProps extends React.HTMLProps<HTMLInputElement> {\n  label?: string;\n  id?: string;\n  checked?: boolean;\n  children?: React.ReactNode;\n}\n\nconst CheckboxHeadless: FC<CheckboxHeadlessProps> = ({\n  id,\n  checked,\n  label,\n  children,\n  ...props\n}) => {\n  return (\n    <div className=\"group/checkbox-headless relative\">\n      {label ? (\n        <label className=\"mb-1 inline-block cursor-pointer select-none font-sans text-sm text-muted-400\">\n          {label}\n        </label>\n      ) : (\n        \"\"\n      )}\n      <label htmlFor={id} className=\"relative block\">\n        <input\n          id={id}\n          className=\"peer absolute inset-0 z-20 h-full w-full cursor-pointer opacity-0\"\n          type=\"checkbox\"\n          checked={checked}\n          {...props}\n        />\n        {children}\n      </label>\n    </div>\n  );\n};\n\nexport default CheckboxHeadless;\n"]}